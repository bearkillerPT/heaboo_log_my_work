{"version":3,"sources":["screens/mobileApp.tsx","app.tsx","screens/webApp.tsx","App.tsx"],"names":["App","navigation","useState","inputText","setInputText","View","style","styles","appContainer","StatusBar","ScrollView","usersContainer","users","map","user","index","visible","setVisible","buttonsState","setButtonsState","userState","handleCancel","userView","key","TouchableOpacity","buttonContainer","backgroundColor","admin","onPress","Text","usernameText","username","Container","Title","Description","Input","secureTextEntry","onChangeText","text","keyboardType","Button","label","password","current_timestamp","Date","now","firebase","database","ref","set","push","StyleSheet","create","display","flexGrow","padding","color","textAlign","borderRadius","justifyContent","alignContent","timestampView","flex","flexDirection","timestampContainer","logStateContainer","require","apps","length","app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createStackNavigator","web_appContainer","maxHeight","web_usersContainer","web_userView","web_usernameText","fontSize","web_buttonContainer","web_timestampView","web_timestampContainer","web_logStateContainer","web_passwdInput","borderColor","borderWidth","marginTop","web_passwdInputContainer","web_cancelInputContainer","paddingHorizontal","paddingVertical","web_cancelInput","web_confirmInputContainer","web_confirmInput","web_buttonText","WebApp","insertingPasswd","setInsertingPasswd","TextInput","Stack","AppWrapper","NavigationContainer","Navigator","Platform","OS","Screen","name","component","options","title","headerStyle","headerTintColor","headerTitleStyle","alignSelf","Admin","AdminUser","route","params","Object","keys","timestamp","parseInt","toDateString","toLocaleTimeString","setUsers","once","then","res","val"],"mappings":"2PAKe,SAASA,EAAT,GAA8B,IAAfC,EAAc,EAAdA,WAC5B,EAAkCC,mBAAS,IAA3C,WAAOC,EAAP,KAAkBC,EAAlB,KACA,OACE,kBAACC,EAAA,EAAD,CAAMC,MAAOC,EAAOC,cAClB,kBAACC,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CAAYJ,MAAOC,EAAOI,gBAEtBC,EAAMC,KAAI,SAACC,EAAMC,GACf,MAA8Bb,oBAAS,GAAvC,WAAOc,EAAP,KAAgBC,EAAhB,KACA,EAAwCf,oBAAS,GAAjD,WAAOgB,EAAP,KAAqBC,EAArB,KACA,EAAkCjB,mBAASY,GAA3C,WAAOM,EAAP,KAKMC,GALN,KAKqB,WACnBJ,GAAW,KAEb,OACE,kBAACZ,EAAA,EAAD,CAAMC,MAAOC,EAAOe,SAAUC,IAAKR,GACjC,kBAACS,EAAA,EAAD,CAAkBlB,MAAO,CAACC,EAAOkB,gBAAiB,CAChDC,gBAAiBZ,EAAKa,MAAQ,UAAYT,EAAe,QAAU,QACjEU,QAXW,WACjBX,GAAW,KAWP,kBAACZ,EAAA,EAAD,KACE,kBAACwB,EAAA,EAAD,CAAMvB,MAAOC,EAAOuB,cAAeV,EAAUW,UAC7C,kBAAC,IAAOC,UAAR,CAAkBhB,QAASA,GACzB,kBAAC,IAAOiB,MAAR,yBACA,kBAAC,IAAOC,YAAR,+CAGA,kBAAC,IAAOC,MAAR,CAAcC,iBAAe,EAACC,aAAc,SAACC,GAAWlC,EAAakC,IAASC,aAAa,eAC3F,kBAAC,IAAOC,OAAR,CAAeC,MAAM,KAAKb,QAAS,WACjC,GAAIzB,GAAaiB,EAAUsB,SACzB,GAAIxB,EAAc,CAChBC,GAAgB,GAChB,IAAMwB,EAAoBC,KAAKC,MAC/BC,EAASC,WAAWC,IAAI,SAAW5B,EAAUW,SAAW,IAAMY,GAAmBM,IAC/E,aAIF,GAAI7B,EAAUO,MACZ1B,EAAWiD,KAAK,aAEb,CACH/B,GAAgB,GAChB,IAAMwB,EAAoBC,KAAKC,MAC/BC,EAASC,WAAWC,IAAI,SAAW5B,EAAUW,SAAW,IAAMY,GAAmBM,IAC/E,UAKR7C,EAAa,IACbiB,OAEF,kBAAC,IAAOmB,OAAR,CAAeC,MAAM,SAASb,QAASP,aAe7D,IAAMd,EAAS4C,IAAWC,OAAO,CAC/B5C,aAAc,CACZ6C,QAAS,OACTC,SAAU,EACV5B,gBAAiB,QAEnBf,eAAgB,CACd0C,QAAS,OACTC,SAAU,EACV5B,gBAAiB,QAEnBJ,SAAU,CACRiC,QAAS,IAEXzB,aAAc,CACZ0B,MAAO,OACPC,UAAW,UAEbhC,gBAAiB,CACf8B,QAAS,GACTG,aAAc,GACdC,eAAgB,SAChBC,aAAc,UAEhBC,cAAe,CACbN,QAAS,GACTO,KAAM,EACNC,cAAe,MACfJ,eAAgB,iBAElBK,mBAAoB,GAGpBC,kBAAmB,K,kBCtGVnB,EAAWoB,EAAQ,KAC9BA,EAAQ,KACD,IAAMtD,EAAQ,CACnB,CACE,SAAY,YACZ,SAAY,OACZ,OAAS,GAEX,CACE,SAAY,YACZ,SAAY,OACZ,OAAS,GAGX,CACE,SAAY,gBACZ,SAAY,OACZ,OAAS,IAeRkC,EAASqB,KAAKC,OAGjBtB,EAASuB,MAFTvB,EAASwB,cAZY,CACrBC,OAAQ,0CACRC,WAAY,oCACZC,YAAa,wDACbC,UAAW,oBACXC,cAAe,gCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBASHC,cAgHC5B,IAAWC,OAAO,CAC/B5C,aAAc,CACZ6C,QAAS,OACTC,SAAU,EACV5B,gBAAiB,QAEnBf,eAAgB,CACd0C,QAAS,OACTC,SAAU,EACV5B,gBAAiB,QAEnBJ,SAAU,CACRiC,QAAS,IAEXzB,aAAc,CACZ0B,MAAO,OACPC,UAAW,UAEbhC,gBAAiB,CACf8B,QAAS,GACTG,aAAc,GACdC,eAAgB,SAChBC,aAAc,UAEhBC,cAAe,CACbN,QAAS,GACTO,KAAM,EACNC,cAAe,MACfJ,eAAgB,iBAElBK,mBAAoB,GAGpBC,kBAAmB,GAInBe,iBAAkB,CAChBtD,gBAAiB,OACjB4B,SAAU,EACVK,eAAgB,SAChBC,aAAc,SACdqB,UAAW,KAEbC,mBAAoB,CAClBxD,gBAAiB,QAEnByD,aAAc,CACZ9B,QAAS,OACTS,KAAM,EACNP,QAAS,GACTI,eAAgB,gBAChBC,aAAc,iBAEhBwB,iBAAkB,CAChB5B,MAAO,OACPC,UAAW,SACX4B,SAAU,IAEZC,oBAAqB,CACnB/B,QAAS,GACTG,aAAc,GACdC,eAAgB,SAChBC,aAAc,UAEhB2B,kBAAmB,CACjBhC,QAAS,GACTO,KAAM,EACNC,cAAe,MACfJ,eAAgB,iBAElB6B,uBAAwB,GAGxBC,sBAAuB,GAEvBC,gBAAiB,CACf5B,KAAM,EACN6B,YAAa,QACbC,YAAa,EACbpC,MAAO,OACP6B,SAAU,GACVQ,UAAW,GAEbC,yBAA0B,CACxBnC,eAAgB,gBAChBC,aAAc,gBACdG,cAAe,MACfV,QAAS,QAEX0C,yBAA0B,CACxBjC,KAAM,EACNpC,gBAAiB,MACjBkC,aAAc,SACdD,eAAgB,SAChBD,aAAc,GACdsC,kBAAmB,GACnBC,gBAAiB,GAEnBC,gBAAiB,CACfxE,gBAAiB,OAGnByE,0BAA2B,CACzBrC,KAAM,EACNpC,gBAAiB,QACjBkC,aAAc,SACdD,eAAgB,SAChBD,aAAc,GACdsC,kBAAmB,GACnBC,gBAAiB,GAEnBG,iBAAkB,CAChB1E,gBAAiB,SAEnB2E,eAAgB,CACd7C,MAAO,OACPC,UAAW,SACX4B,SAAU,MAtHd,I,QCzJe,SAASiB,EAAT,GAAiC,IAAfrG,EAAc,EAAdA,WAC/B,EAAkCC,mBAAS,IAA3C,WAAOC,EAAP,KAAkBC,EAAlB,KACA,OACE,kBAACC,EAAA,EAAD,CAAMC,MAAOC,EAAOyE,kBAClB,kBAACvE,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CAAYJ,MAAOC,EAAO2E,oBAEtBtE,EAAMC,KAAI,SAACC,EAAMC,GACf,MAAwCb,oBAAS,GAAjD,WAAOgB,EAAP,KACA,GADA,KACkChB,mBAASY,IAA3C,WAAOM,EAAP,KACA,GADA,KAC8ClB,oBAAS,IAAvD,WAAOqG,EAAP,KAAwBC,EAAxB,KACA,OACE,kBAACnG,EAAA,EAAD,CAAMC,MAAOC,EAAO4E,aAAc5D,IAAKR,GACpCwF,GACC,kBAAClG,EAAA,EAAD,CAAMC,MAAOC,EAAOuF,0BAClB,kBAACW,EAAA,EAAD,CAAWnG,MAAOC,EAAOmF,gBAAiBtD,iBAAe,EAACC,aAAc,SAACC,GAAD,OAAUlC,EAAakC,MAE/F,kBAACjC,EAAA,EAAD,CAAMC,MAAO,CAAE+C,QAAS,OAAQS,KAAM,IACpC,kBAACtC,EAAA,EAAD,CAAkBlB,MAAOC,EAAOwF,yBAA0BnE,QAAS,kBAAM4E,GAAmB,KAC1F,kBAACnG,EAAA,EAAD,CAAMC,MAAOC,EAAO2F,iBAClB,kBAACrE,EAAA,EAAD,CAAMvB,MAAOC,EAAO8F,gBAApB,cAGJ,kBAAC7E,EAAA,EAAD,CAAkBlB,MAAOC,EAAO4F,0BAA2BvE,QAAS,WAC9Dd,EAAK4B,UAAYvC,GACnBF,EAAWiD,KAAK,SAClBsD,GAAmB,KAEnB,kBAACnG,EAAA,EAAD,CAAMC,MAAOC,EAAO6F,kBAClB,kBAACvE,EAAA,EAAD,CAAMvB,MAAOC,EAAO8F,gBAApB,kBAMRE,GACA,kBAAC/E,EAAA,EAAD,CAAkBlB,MAAO,CAACC,EAAO+E,oBAAqB,CACpD5D,gBAAiBZ,EAAKa,MAAQ,UAAYT,EAAe,QAAU,QACjEU,QAAS,WACPd,EAAKa,OACW6E,GAAlBD,KAEF,kBAAClG,EAAA,EAAD,KACE,kBAACwB,EAAA,EAAD,CAAMvB,MAAOC,EAAO6E,kBAAmBhE,EAAUW,kBAcvE,IAAMxB,EAAS4C,IAAWC,OAAO,CAC/B4B,iBAAkB,CAChBtD,gBAAiB,OACjB4B,SAAU,EACVK,eAAgB,SAChBC,aAAc,SACdqB,UAAW,KAEbC,mBAAoB,CAClBxD,gBAAiB,QAEnByD,aAAc,CACZ9B,QAAS,OACTS,KAAM,EACNP,QAAS,GACTI,eAAgB,gBAChBC,aAAc,iBAEhBwB,iBAAkB,CAChB5B,MAAO,OACPC,UAAW,SACX4B,SAAU,IAEZC,oBAAqB,CACnB/B,QAAS,GACTG,aAAc,GACdC,eAAgB,SAChBC,aAAc,UAEhB2B,kBAAmB,CACjBhC,QAAS,GACTO,KAAM,EACNC,cAAe,MACfJ,eAAgB,iBAElB6B,uBAAwB,GAGxBC,sBAAuB,GAEvBC,gBAAiB,CACf5B,KAAM,EACN6B,YAAa,QACbC,YAAa,EACbpC,MAAO,OACP6B,SAAU,GACVQ,UAAW,GAEbC,yBAA0B,CACxBnC,eAAgB,gBAChBC,aAAc,gBACdG,cAAe,MACfV,QAAS,QAEX0C,yBAA0B,CACxBjC,KAAM,EACNpC,gBAAiB,MACjBkC,aAAc,SACdD,eAAgB,SAChBD,aAAc,GACdsC,kBAAmB,GACnBC,gBAAiB,GAEnBC,gBAAiB,CACfxE,gBAAiB,OAGnByE,0BAA2B,CACzBrC,KAAM,EACNpC,gBAAiB,QACjBkC,aAAc,SACdD,eAAgB,SAChBD,aAAc,GACdsC,kBAAmB,GACnBC,gBAAiB,GAEnBG,iBAAkB,CAChB1E,gBAAiB,SAEnB2E,eAAgB,CACd7C,MAAO,OACPC,UAAW,SACX4B,SAAU,MCxIHvC,EAAWoB,EAAQ,KAC9BA,EAAQ,KACD,IAAMtD,EAAQ,CACnB,CACE,SAAY,YACZ,SAAY,OACZ,OAAS,GAEX,CACE,SAAY,YACZ,SAAY,OACZ,OAAS,GAGX,CACE,SAAY,gBACZ,SAAY,OACZ,OAAS,IAeRkC,EAASqB,KAAKC,OAGjBtB,EAASuB,MAFTvB,EAASwB,cAZY,CACrBC,OAAQ,0CACRC,WAAY,oCACZC,YAAa,wDACbC,UAAW,oBACXC,cAAe,gCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBASjB,IAAM4B,EAAQ3B,cA8CC4B,IA5Cf,WACE,OACE,kBAACC,EAAA,EAAD,KACE,kBAAC,EAAMC,UAAP,KACmB,QAAhBC,IAASC,IACR,kBAAC,EAAMC,OAAP,CAAcC,KAAK,OAAOC,UAAWlH,EAAKmH,QAAS,CACjDC,MAAO,kCACPC,YAAa,CACX3F,gBAAiB,QAEnB4F,gBAAiB,UAGJ,QAAhBR,IAASC,IACR,kBAAC,EAAMC,OAAP,CAAcC,KAAK,OAAOC,UAAWZ,EAAQa,QAAS,CACpDC,MAAO,kCACPG,iBAAkB,CAAEC,UAAW,UAC/BH,YAAa,CACX3F,gBAAiB,QAEnB4F,gBAAiB,UAGrB,kBAAC,EAAMN,OAAP,CAAcC,KAAK,QAAQC,UAAWO,EAAON,QAAS,CACpDC,MAAO,QACPG,iBAAkB,CAAEC,UAAW,UAC/BH,YAAa,CACX3F,gBAAiB,QAEnB4F,gBAAiB,UAEnB,kBAAC,EAAMN,OAAP,CAAcC,KAAK,YAAYC,UAAWQ,EAAWP,QAAS,CAC5DC,MAAO,QACPG,iBAAkB,CAAEC,UAAW,UAC/BH,YAAa,CACX3F,gBAAiB,QAEnB4F,gBAAiB,aASpB,SAASI,EAAT,GAA+B,IAAVC,EAAS,EAATA,MAC1B,OACE,kBAACtH,EAAA,EAAD,CAAMC,MAAOC,EAAOC,cAClB,kBAACC,EAAA,EAAD,MACA,kBAACJ,EAAA,EAAD,CAAMC,MAAOC,EAAOe,UAClB,kBAACO,EAAA,EAAD,CAAMvB,MAAOC,EAAOuB,cAAe6F,EAAMC,OAAO7F,UAChD,kBAACrB,EAAA,EAAD,CAAYJ,MAAOC,EAAOI,gBACxBkH,OAAOC,KAAKH,EAAMC,OAAO9G,MAAMD,KAAI,SAACkH,EAAWhH,GAC7C,OACE,kBAACV,EAAA,EAAD,CAAMC,MAAOC,EAAOsD,cAAetC,IAAKR,GACtC,kBAACV,EAAA,EAAD,CAAMC,MAAOC,EAAO0D,mBAClB,kBAACpC,EAAA,EAAD,CAAMvB,MAAOC,EAAOuB,cAAe6F,EAAMC,OAAO9G,KAAKiH,KAEvD,kBAAC1H,EAAA,EAAD,CAAMC,MAAOC,EAAOyD,oBAClB,kBAACnC,EAAA,EAAD,CAAMvB,MAAOC,EAAOuB,cACjB,IAAIc,KAAKoF,SAASD,IAAYE,gBAEjC,kBAACpG,EAAA,EAAD,CAAMvB,MAAOC,EAAOuB,cACjB,IAAIc,KAAKoF,SAASD,IAAYG,8BAa5C,SAAST,EAAT,GAAgC,IAAfxH,EAAc,EAAdA,WACtB,EAA0BC,mBAAS,IAAnC,WAAOU,EAAP,KAAcuH,EAAd,KAIA,OAHArF,EAASC,WAAWC,IAAI,UAAUoF,KAAK,SAASC,MAAK,SAACC,GACpDH,EAASG,EAAIC,UAEF,MAAT3H,EAEA,kBAACP,EAAA,EAAD,CAAMC,MAAOC,EAAOC,cAClB,kBAACC,EAAA,EAAD,MACA,kBAACoB,EAAA,EAAD,CAAMvB,MAAOC,EAAOuB,cAApB,gBAKF,kBAACzB,EAAA,EAAD,CAAMC,MAAOC,EAAOC,cAClB,kBAACC,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CAAYJ,MAAOC,EAAOI,gBACxBkH,OAAOC,KAAKlH,GAAOC,KAAI,SAACkB,EAAUhB,GAChC,OACE,kBAACV,EAAA,EAAD,CAAMC,MAAOC,EAAOsD,cAAetC,IAAKR,GACtC,kBAACS,EAAA,EAAD,CAAkBlB,MAAO,CAACC,EAAOkB,iBAAkBG,QAAS,WAC1D3B,EAAWiD,KAAK,YAAa,CAAEnB,WAAUjB,KAAMF,EAAMmB,OAErD,kBAACF,EAAA,EAAD,CAAMvB,MAAOC,EAAOuB,cAAeC,UAUrD,IAAMxB,EAAS4C,IAAWC,OAAO,CAC/B5C,aAAc,CACZ6C,QAAS,OACTC,SAAU,EACV5B,gBAAiB,QAEnBf,eAAgB,CACd0C,QAAS,OACTC,SAAU,EACV5B,gBAAiB,QAEnBJ,SAAU,CACRiC,QAAS,IAEXzB,aAAc,CACZ0B,MAAO,OACPC,UAAW,UAEbhC,gBAAiB,CACf8B,QAAS,GACTG,aAAc,GACdC,eAAgB,SAChBC,aAAc,UAEhBC,cAAe,CACbN,QAAS,GACTO,KAAM,EACNC,cAAe,MACfJ,eAAgB,iBAElBK,mBAAoB,GAGpBC,kBAAmB,GAInBe,iBAAkB,CAChBtD,gBAAiB,OACjB4B,SAAU,EACVK,eAAgB,SAChBC,aAAc,SACdqB,UAAW,KAEbC,mBAAoB,CAClBxD,gBAAiB,QAEnByD,aAAc,CACZ9B,QAAS,OACTS,KAAM,EACNP,QAAS,GACTI,eAAgB,gBAChBC,aAAc,iBAEhBwB,iBAAkB,CAChB5B,MAAO,OACPC,UAAW,SACX4B,SAAU,IAEZC,oBAAqB,CACnB/B,QAAS,GACTG,aAAc,GACdC,eAAgB,SAChBC,aAAc,UAEhB2B,kBAAmB,CACjBhC,QAAS,GACTO,KAAM,EACNC,cAAe,MACfJ,eAAgB,iBAElB6B,uBAAwB,GAGxBC,sBAAuB,GAEvBC,gBAAiB,CACf5B,KAAM,EACN6B,YAAa,QACbC,YAAa,EACbpC,MAAO,OACP6B,SAAU,GACVQ,UAAW,GAEbC,yBAA0B,CACxBnC,eAAgB,gBAChBC,aAAc,gBACdG,cAAe,MACfV,QAAS,QAEX0C,yBAA0B,CACxBjC,KAAM,EACNpC,gBAAiB,MACjBkC,aAAc,SACdD,eAAgB,SAChBD,aAAc,GACdsC,kBAAmB,GACnBC,gBAAiB,GAEnBC,gBAAiB,CACfxE,gBAAiB,OAGnByE,0BAA2B,CACzBrC,KAAM,EACNpC,gBAAiB,QACjBkC,aAAc,SACdD,eAAgB,SAChBD,aAAc,GACdsC,kBAAmB,GACnBC,gBAAiB,GAEnBG,iBAAkB,CAChB1E,gBAAiB,SAEnB2E,eAAgB,CACd7C,MAAO,OACPC,UAAW,SACX4B,SAAU,O","file":"static/js/app.5016a1dd.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { StyleSheet, Text, ScrollView, StatusBar, View, TouchableOpacity } from 'react-native';\r\n//import firebase from 'firebase/app';\r\nimport Dialog from 'react-native-dialog';\r\nimport { firebase, users } from '../App'\r\nexport default function App({ navigation }) {\r\n  const [inputText, setInputText] = useState(\"\");\r\n  return (\r\n    <View style={styles.appContainer}>\r\n      <StatusBar />\r\n      <ScrollView style={styles.usersContainer}>\r\n        {\r\n          users.map((user, index) => {\r\n            const [visible, setVisible] = useState(false);\r\n            const [buttonsState, setButtonsState] = useState(false);\r\n            const [userState, setUserState] = useState(user);\r\n            const showDialog = () => {\r\n              setVisible(true);\r\n            };\r\n\r\n            const handleCancel = () => {\r\n              setVisible(false);\r\n            };\r\n            return (\r\n              <View style={styles.userView} key={index}>\r\n                <TouchableOpacity style={[styles.buttonContainer, {\r\n                  backgroundColor: user.admin ? \"#4D4E4F\" : buttonsState ? \"green\" : \"red\"\r\n                }]} onPress={showDialog}>\r\n                  <View>\r\n                    <Text style={styles.usernameText}>{userState.username}</Text>\r\n                    <Dialog.Container visible={visible} >\r\n                      <Dialog.Title>Inserir password</Dialog.Title>\r\n                      <Dialog.Description>\r\n                        Insira a sua password para começar!\r\n                      </Dialog.Description>\r\n                      <Dialog.Input secureTextEntry onChangeText={(text) => { setInputText(text) }} keyboardType='number-pad'></Dialog.Input>\r\n                      <Dialog.Button label=\"OK\" onPress={() => {\r\n                        if (inputText == userState.password)\r\n                          if (buttonsState) {\r\n                            setButtonsState(false);\r\n                            const current_timestamp = Date.now();\r\n                            firebase.database().ref('users/' + userState.username + '/' + current_timestamp).set(\r\n                              'Saiu'\r\n                            );\r\n                          }\r\n                          else {\r\n                            if (userState.admin) {\r\n                              navigation.push('Admin');\r\n                            }\r\n                            else {\r\n                              setButtonsState(true);\r\n                              const current_timestamp = Date.now();\r\n                              firebase.database().ref('users/' + userState.username + '/' + current_timestamp).set(\r\n                                'Entrou'\r\n                              );\r\n                            }\r\n\r\n                          }\r\n                        setInputText(\"\");\r\n                        handleCancel();\r\n                      }} />\r\n                      <Dialog.Button label=\"Cancel\" onPress={handleCancel} />\r\n                    </Dialog.Container>\r\n                  </View>\r\n                </TouchableOpacity>\r\n              </View>\r\n            );\r\n          })\r\n        }\r\n      </ScrollView>\r\n    </View>\r\n\r\n\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  appContainer: {\r\n    display: 'flex',\r\n    flexGrow: 1,\r\n    backgroundColor: '#000',\r\n  },\r\n  usersContainer: {\r\n    display: 'flex',\r\n    flexGrow: 1,\r\n    backgroundColor: '#000',\r\n  },\r\n  userView: {\r\n    padding: 10,\r\n  },\r\n  usernameText: {\r\n    color: \"#fff\",\r\n    textAlign: 'center',\r\n  },\r\n  buttonContainer: {\r\n    padding: 20,\r\n    borderRadius: 10,\r\n    justifyContent: 'center',\r\n    alignContent: 'center'\r\n  },\r\n  timestampView: {\r\n    padding: 10,\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between'\r\n  },\r\n  timestampContainer: {\r\n\r\n  },\r\n  logStateContainer: {\r\n  }\r\n});\r\n","import React, {useState} from 'react';\r\nimport { Platform, Alert, TextInput, StyleSheet, Text, ScrollView, StatusBar, View, TouchableOpacity } from 'react-native';\r\n//import firebase from 'firebase/app';\r\nimport App from './screens/mobileApp';\r\nimport WebApp from './screens/webApp';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nexport var firebase = require('firebase/app');\r\nrequire('firebase/database');\r\nexport const users = [\r\n  {\r\n    \"username\": \"Francisco\",\r\n    \"password\": \"2378\",\r\n    \"admin\": false\r\n  },\r\n  {\r\n    \"username\": \"Alexandre\",\r\n    \"password\": \"4536\",\r\n    \"admin\": false\r\n  },\r\n\r\n  {\r\n    \"username\": \"Administrador\",\r\n    \"password\": \"6748\", \r\n    \"admin\": true\r\n  },\r\n]\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyA9MV-PgCXfWhnGt-FRHlVIzlvUuRhVmRc\",\r\n  authDomain: \"log-my-work-8db34.firebaseapp.com\",\r\n  databaseURL: \"https://log-my-work-8db34-default-rtdb.firebaseio.com\",\r\n  projectId: \"log-my-work-8db34\",\r\n  storageBucket: \"log-my-work-8db34.appspot.com\",\r\n  messagingSenderId: \"721021340350\",\r\n  appId: \"1:721021340350:web:75b15661f04266d863ecef\",\r\n  measurementId: \"G-86K99VSDRW\"\r\n};\r\n\r\nif (!firebase.apps.length) {\r\n  firebase.initializeApp(firebaseConfig);\r\n}else {\r\n  firebase.app(); // if already initialized, use that one\r\n}\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nfunction AppWrapper() {\r\n  return (\r\n    <NavigationContainer >\r\n      <Stack.Navigator>\r\n        {Platform.OS !== \"web\" &&\r\n          <Stack.Screen name=\"Home\" component={App} options={{\r\n            title: 'Registo produção Hoterway',\r\n            headerStyle: {\r\n              backgroundColor: '#000',\r\n            },\r\n            headerTintColor: '#FFF'\r\n          }} />\r\n        }\r\n        {Platform.OS === \"web\" &&\r\n          <Stack.Screen name=\"Home\" component={WebApp} options={{\r\n            title: 'Registo produção Hoterway',\r\n            headerTitleStyle: { alignSelf: 'center' },\r\n            headerStyle: {\r\n              backgroundColor: '#000',\r\n            },\r\n            headerTintColor: '#FFF',\r\n          }} />\r\n        }\r\n        <Stack.Screen name=\"Admin\" component={Admin} options={{\r\n          title: 'Admin',\r\n          headerTitleStyle: { alignSelf: 'center' },\r\n          headerStyle: {\r\n            backgroundColor: '#000',\r\n          },\r\n          headerTintColor: '#FFF'\r\n        }} />\r\n        <Stack.Screen name=\"AdminUser\" component={AdminUser} options={{\r\n          title: 'Admin',\r\n          headerTitleStyle: { alignSelf: 'center' },\r\n          headerStyle: {\r\n            backgroundColor: '#000',\r\n          },\r\n          headerTintColor: '#FFF'\r\n        }} />\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n}\r\n\r\nexport default AppWrapper;\r\n\r\nexport function AdminUser({ route }) {\r\n  return (\r\n    <View style={styles.appContainer}>\r\n      <StatusBar />\r\n      <View style={styles.userView}>\r\n        <Text style={styles.usernameText}>{route.params.username}</Text>\r\n        <ScrollView style={styles.usersContainer}>{\r\n          Object.keys(route.params.user).map((timestamp, index) => {\r\n            return (\r\n              <View style={styles.timestampView} key={index}>\r\n                <View style={styles.logStateContainer}>\r\n                  <Text style={styles.usernameText}>{route.params.user[timestamp]}</Text>\r\n                </View>\r\n                <View style={styles.timestampContainer}>\r\n                  <Text style={styles.usernameText}>\r\n                    {new Date(parseInt(timestamp)).toDateString()}\r\n                  </Text>\r\n                  <Text style={styles.usernameText}>\r\n                    {new Date(parseInt(timestamp)).toLocaleTimeString()}\r\n                  </Text>\r\n                </View>\r\n              </View>\r\n            );\r\n          }\r\n          )\r\n        }</ScrollView>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport function Admin({ navigation }) {\r\n  const [users, setUsers] = useState({});\r\n  firebase.database().ref('users/').once('value').then((res) => {\r\n    setUsers(res.val());\r\n  });\r\n  if (users == null)\r\n    return (\r\n      <View style={styles.appContainer}>\r\n        <StatusBar />\r\n        <Text style={styles.usernameText}>Loading....</Text>\r\n      </View>\r\n    );\r\n  else\r\n    return (\r\n      <View style={styles.appContainer}>\r\n        <StatusBar />\r\n        <ScrollView style={styles.usersContainer}>{\r\n          Object.keys(users).map((username, index) => {\r\n            return (\r\n              <View style={styles.timestampView} key={index}>\r\n                <TouchableOpacity style={[styles.buttonContainer]} onPress={() => {\r\n                  navigation.push('AdminUser', { username, user: users[username] })\r\n                }}>\r\n                  <Text style={styles.usernameText}>{username}</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            );\r\n          })\r\n        }</ScrollView>\r\n      </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  appContainer: {\r\n    display: 'flex',\r\n    flexGrow: 1,\r\n    backgroundColor: '#000',\r\n  },\r\n  usersContainer: {\r\n    display: 'flex',\r\n    flexGrow: 1,\r\n    backgroundColor: '#000',\r\n  },\r\n  userView: {\r\n    padding: 10,\r\n  },\r\n  usernameText: {\r\n    color: \"#fff\",\r\n    textAlign: 'center',\r\n  },\r\n  buttonContainer: {\r\n    padding: 20,\r\n    borderRadius: 10,\r\n    justifyContent: 'center',\r\n    alignContent: 'center'\r\n  },\r\n  timestampView: {\r\n    padding: 10,\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between'\r\n  },\r\n  timestampContainer: {\r\n\r\n  },\r\n  logStateContainer: {\r\n  },\r\n\r\n\r\n  web_appContainer: {\r\n    backgroundColor: '#000',\r\n    flexGrow: 1,\r\n    justifyContent: 'center',\r\n    alignContent: 'center',\r\n    maxHeight: 800\r\n  },\r\n  web_usersContainer: {\r\n    backgroundColor: '#000',\r\n  },\r\n  web_userView: {\r\n    display: 'flex',\r\n    flex: 1,\r\n    padding: 10,\r\n    justifyContent: 'space-between',\r\n    alignContent: 'space-between',\r\n  },\r\n  web_usernameText: {\r\n    color: \"#fff\",\r\n    textAlign: 'center',\r\n    fontSize: 30\r\n  },\r\n  web_buttonContainer: {\r\n    padding: 20,\r\n    borderRadius: 10,\r\n    justifyContent: 'center',\r\n    alignContent: 'center'\r\n  },\r\n  web_timestampView: {\r\n    padding: 10,\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between'\r\n  },\r\n  web_timestampContainer: {\r\n\r\n  },\r\n  web_logStateContainer: {\r\n  },\r\n  web_passwdInput: {\r\n    flex: 1,\r\n    borderColor: 'white',\r\n    borderWidth: 1,\r\n    color: '#FFF',\r\n    fontSize: 20,\r\n    marginTop: 5\r\n  },\r\n  web_passwdInputContainer: {\r\n    justifyContent: 'space-between',\r\n    alignContent: 'space-between',\r\n    flexDirection: 'row',\r\n    display: 'flex'\r\n  },\r\n  web_cancelInputContainer: {\r\n    flex: 1,\r\n    backgroundColor: 'red',\r\n    alignContent: 'center',\r\n    justifyContent: 'center',\r\n    borderRadius: 15,\r\n    paddingHorizontal: 40,\r\n    paddingVertical: 6,\r\n  },\r\n  web_cancelInput: {\r\n    backgroundColor: 'red'\r\n\r\n  },\r\n  web_confirmInputContainer: {\r\n    flex: 1,\r\n    backgroundColor: 'green',\r\n    alignContent: 'center',\r\n    justifyContent: 'center',\r\n    borderRadius: 15,\r\n    paddingHorizontal: 40,\r\n    paddingVertical: 6,\r\n  },\r\n  web_confirmInput: {\r\n    backgroundColor: 'green'\r\n  },\r\n  web_buttonText: {\r\n    color: \"#fff\",\r\n    textAlign: 'center',\r\n    fontSize: 12\r\n  },\r\n});\r\n","import {users} from '../app';\r\nimport React, { useState } from 'react';\r\nimport { TextInput, StyleSheet, Text, ScrollView, StatusBar, View, TouchableOpacity } from 'react-native';\r\n\r\nexport default function WebApp({ navigation }) {\r\n  const [inputText, setInputText] = useState(\"\");\r\n  return (\r\n    <View style={styles.web_appContainer}>\r\n      <StatusBar />\r\n      <ScrollView style={styles.web_usersContainer}>\r\n        {\r\n          users.map((user, index) => {\r\n            const [buttonsState, setButtonsState] = useState(false);\r\n            const [userState, setUserState] = useState(user);\r\n            const [insertingPasswd, setInsertingPasswd] = useState(false)\r\n            return (\r\n              <View style={styles.web_userView} key={index}>\r\n                {insertingPasswd &&\r\n                  <View style={styles.web_passwdInputContainer}>\r\n                    <TextInput style={styles.web_passwdInput} secureTextEntry onChangeText={(text) => setInputText(text)}>\r\n                    </TextInput>\r\n                    <View style={{ display: 'flex', flex: 1 }}>\r\n                      <TouchableOpacity style={styles.web_cancelInputContainer} onPress={() => setInsertingPasswd(false)}>\r\n                        <View style={styles.web_cancelInput} >\r\n                          <Text style={styles.web_buttonText}>Cancelar</Text>\r\n                        </View>\r\n                      </TouchableOpacity>\r\n                      <TouchableOpacity style={styles.web_confirmInputContainer} onPress={() => {\r\n                        if (user.password == inputText)\r\n                          navigation.push('Admin')\r\n                        setInsertingPasswd(false);\r\n                      }}>\r\n                        <View style={styles.web_confirmInput} >\r\n                          <Text style={styles.web_buttonText}>Confirmar</Text>\r\n                        </View>\r\n                      </TouchableOpacity>\r\n                    </View>\r\n                  </View>\r\n                }\r\n                {!insertingPasswd &&\r\n                  <TouchableOpacity style={[styles.web_buttonContainer, {\r\n                    backgroundColor: user.admin ? \"#4D4E4F\" : buttonsState ? \"green\" : \"red\"\r\n                  }]} onPress={() => {\r\n                    if (user.admin)\r\n                      insertingPasswd ? setInsertingPasswd(false) : setInsertingPasswd(true)\r\n                  }}>\r\n                    <View>\r\n                      <Text style={styles.web_usernameText}>{userState.username}</Text>\r\n                    </View>\r\n                  </TouchableOpacity>\r\n                }\r\n              </View>\r\n            );\r\n          })\r\n        }\r\n      </ScrollView>\r\n    </View>\r\n\r\n\r\n  );\r\n}\r\nconst styles = StyleSheet.create({\r\n  web_appContainer: {\r\n    backgroundColor: '#000',\r\n    flexGrow: 1,\r\n    justifyContent: 'center',\r\n    alignContent: 'center',\r\n    maxHeight: 800\r\n  },\r\n  web_usersContainer: {\r\n    backgroundColor: '#000',\r\n  },\r\n  web_userView: {\r\n    display: 'flex',\r\n    flex: 1,\r\n    padding: 10,\r\n    justifyContent: 'space-between',\r\n    alignContent: 'space-between',\r\n  },\r\n  web_usernameText: {\r\n    color: \"#fff\",\r\n    textAlign: 'center',\r\n    fontSize: 30\r\n  },\r\n  web_buttonContainer: {\r\n    padding: 20,\r\n    borderRadius: 10,\r\n    justifyContent: 'center',\r\n    alignContent: 'center'\r\n  },\r\n  web_timestampView: {\r\n    padding: 10,\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between'\r\n  },\r\n  web_timestampContainer: {\r\n\r\n  },\r\n  web_logStateContainer: {\r\n  },\r\n  web_passwdInput: {\r\n    flex: 1,\r\n    borderColor: 'white',\r\n    borderWidth: 1,\r\n    color: '#FFF',\r\n    fontSize: 20,\r\n    marginTop: 5\r\n  },\r\n  web_passwdInputContainer: {\r\n    justifyContent: 'space-between',\r\n    alignContent: 'space-between',\r\n    flexDirection: 'row',\r\n    display: 'flex'\r\n  },\r\n  web_cancelInputContainer: {\r\n    flex: 1,\r\n    backgroundColor: 'red',\r\n    alignContent: 'center',\r\n    justifyContent: 'center',\r\n    borderRadius: 15,\r\n    paddingHorizontal: 40,\r\n    paddingVertical: 6,\r\n  },\r\n  web_cancelInput: {\r\n    backgroundColor: 'red'\r\n\r\n  },\r\n  web_confirmInputContainer: {\r\n    flex: 1,\r\n    backgroundColor: 'green',\r\n    alignContent: 'center',\r\n    justifyContent: 'center',\r\n    borderRadius: 15,\r\n    paddingHorizontal: 40,\r\n    paddingVertical: 6,\r\n  },\r\n  web_confirmInput: {\r\n    backgroundColor: 'green'\r\n  },\r\n  web_buttonText: {\r\n    color: \"#fff\",\r\n    textAlign: 'center',\r\n    fontSize: 12\r\n  },\r\n});\r\n","import React, {useState} from 'react';\r\nimport { Platform, Alert, TextInput, StyleSheet, Text, ScrollView, StatusBar, View, TouchableOpacity } from 'react-native';\r\n//import firebase from 'firebase/app';\r\nimport App from './screens/mobileApp';\r\nimport WebApp from './screens/webApp';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nexport var firebase = require('firebase/app');\r\nrequire('firebase/database');\r\nexport const users = [\r\n  {\r\n    \"username\": \"Francisco\",\r\n    \"password\": \"2378\",\r\n    \"admin\": false\r\n  },\r\n  {\r\n    \"username\": \"Alexandre\",\r\n    \"password\": \"4536\",\r\n    \"admin\": false\r\n  },\r\n\r\n  {\r\n    \"username\": \"Administrador\",\r\n    \"password\": \"6748\", \r\n    \"admin\": true\r\n  },\r\n]\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyA9MV-PgCXfWhnGt-FRHlVIzlvUuRhVmRc\",\r\n  authDomain: \"log-my-work-8db34.firebaseapp.com\",\r\n  databaseURL: \"https://log-my-work-8db34-default-rtdb.firebaseio.com\",\r\n  projectId: \"log-my-work-8db34\",\r\n  storageBucket: \"log-my-work-8db34.appspot.com\",\r\n  messagingSenderId: \"721021340350\",\r\n  appId: \"1:721021340350:web:75b15661f04266d863ecef\",\r\n  measurementId: \"G-86K99VSDRW\"\r\n};\r\n\r\nif (!firebase.apps.length) {\r\n  firebase.initializeApp(firebaseConfig);\r\n}else {\r\n  firebase.app(); // if already initialized, use that one\r\n}\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nfunction AppWrapper() {\r\n  return (\r\n    <NavigationContainer >\r\n      <Stack.Navigator>\r\n        {Platform.OS !== \"web\" &&\r\n          <Stack.Screen name=\"Home\" component={App} options={{\r\n            title: 'Registo produção Hoterway',\r\n            headerStyle: {\r\n              backgroundColor: '#000',\r\n            },\r\n            headerTintColor: '#FFF'\r\n          }} />\r\n        }\r\n        {Platform.OS === \"web\" &&\r\n          <Stack.Screen name=\"Home\" component={WebApp} options={{\r\n            title: 'Registo produção Hoterway',\r\n            headerTitleStyle: { alignSelf: 'center' },\r\n            headerStyle: {\r\n              backgroundColor: '#000',\r\n            },\r\n            headerTintColor: '#FFF',\r\n          }} />\r\n        }\r\n        <Stack.Screen name=\"Admin\" component={Admin} options={{\r\n          title: 'Admin',\r\n          headerTitleStyle: { alignSelf: 'center' },\r\n          headerStyle: {\r\n            backgroundColor: '#000',\r\n          },\r\n          headerTintColor: '#FFF'\r\n        }} />\r\n        <Stack.Screen name=\"AdminUser\" component={AdminUser} options={{\r\n          title: 'Admin',\r\n          headerTitleStyle: { alignSelf: 'center' },\r\n          headerStyle: {\r\n            backgroundColor: '#000',\r\n          },\r\n          headerTintColor: '#FFF'\r\n        }} />\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n}\r\n\r\nexport default AppWrapper;\r\n\r\nexport function AdminUser({ route }) {\r\n  return (\r\n    <View style={styles.appContainer}>\r\n      <StatusBar />\r\n      <View style={styles.userView}>\r\n        <Text style={styles.usernameText}>{route.params.username}</Text>\r\n        <ScrollView style={styles.usersContainer}>{\r\n          Object.keys(route.params.user).map((timestamp, index) => {\r\n            return (\r\n              <View style={styles.timestampView} key={index}>\r\n                <View style={styles.logStateContainer}>\r\n                  <Text style={styles.usernameText}>{route.params.user[timestamp]}</Text>\r\n                </View>\r\n                <View style={styles.timestampContainer}>\r\n                  <Text style={styles.usernameText}>\r\n                    {new Date(parseInt(timestamp)).toDateString()}\r\n                  </Text>\r\n                  <Text style={styles.usernameText}>\r\n                    {new Date(parseInt(timestamp)).toLocaleTimeString()}\r\n                  </Text>\r\n                </View>\r\n              </View>\r\n            );\r\n          }\r\n          )\r\n        }</ScrollView>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport function Admin({ navigation }) {\r\n  const [users, setUsers] = useState({});\r\n  firebase.database().ref('users/').once('value').then((res) => {\r\n    setUsers(res.val());\r\n  });\r\n  if (users == null)\r\n    return (\r\n      <View style={styles.appContainer}>\r\n        <StatusBar />\r\n        <Text style={styles.usernameText}>Loading....</Text>\r\n      </View>\r\n    );\r\n  else\r\n    return (\r\n      <View style={styles.appContainer}>\r\n        <StatusBar />\r\n        <ScrollView style={styles.usersContainer}>{\r\n          Object.keys(users).map((username, index) => {\r\n            return (\r\n              <View style={styles.timestampView} key={index}>\r\n                <TouchableOpacity style={[styles.buttonContainer]} onPress={() => {\r\n                  navigation.push('AdminUser', { username, user: users[username] })\r\n                }}>\r\n                  <Text style={styles.usernameText}>{username}</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            );\r\n          })\r\n        }</ScrollView>\r\n      </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  appContainer: {\r\n    display: 'flex',\r\n    flexGrow: 1,\r\n    backgroundColor: '#000',\r\n  },\r\n  usersContainer: {\r\n    display: 'flex',\r\n    flexGrow: 1,\r\n    backgroundColor: '#000',\r\n  },\r\n  userView: {\r\n    padding: 10,\r\n  },\r\n  usernameText: {\r\n    color: \"#fff\",\r\n    textAlign: 'center',\r\n  },\r\n  buttonContainer: {\r\n    padding: 20,\r\n    borderRadius: 10,\r\n    justifyContent: 'center',\r\n    alignContent: 'center'\r\n  },\r\n  timestampView: {\r\n    padding: 10,\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between'\r\n  },\r\n  timestampContainer: {\r\n\r\n  },\r\n  logStateContainer: {\r\n  },\r\n\r\n\r\n  web_appContainer: {\r\n    backgroundColor: '#000',\r\n    flexGrow: 1,\r\n    justifyContent: 'center',\r\n    alignContent: 'center',\r\n    maxHeight: 800\r\n  },\r\n  web_usersContainer: {\r\n    backgroundColor: '#000',\r\n  },\r\n  web_userView: {\r\n    display: 'flex',\r\n    flex: 1,\r\n    padding: 10,\r\n    justifyContent: 'space-between',\r\n    alignContent: 'space-between',\r\n  },\r\n  web_usernameText: {\r\n    color: \"#fff\",\r\n    textAlign: 'center',\r\n    fontSize: 30\r\n  },\r\n  web_buttonContainer: {\r\n    padding: 20,\r\n    borderRadius: 10,\r\n    justifyContent: 'center',\r\n    alignContent: 'center'\r\n  },\r\n  web_timestampView: {\r\n    padding: 10,\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between'\r\n  },\r\n  web_timestampContainer: {\r\n\r\n  },\r\n  web_logStateContainer: {\r\n  },\r\n  web_passwdInput: {\r\n    flex: 1,\r\n    borderColor: 'white',\r\n    borderWidth: 1,\r\n    color: '#FFF',\r\n    fontSize: 20,\r\n    marginTop: 5\r\n  },\r\n  web_passwdInputContainer: {\r\n    justifyContent: 'space-between',\r\n    alignContent: 'space-between',\r\n    flexDirection: 'row',\r\n    display: 'flex'\r\n  },\r\n  web_cancelInputContainer: {\r\n    flex: 1,\r\n    backgroundColor: 'red',\r\n    alignContent: 'center',\r\n    justifyContent: 'center',\r\n    borderRadius: 15,\r\n    paddingHorizontal: 40,\r\n    paddingVertical: 6,\r\n  },\r\n  web_cancelInput: {\r\n    backgroundColor: 'red'\r\n\r\n  },\r\n  web_confirmInputContainer: {\r\n    flex: 1,\r\n    backgroundColor: 'green',\r\n    alignContent: 'center',\r\n    justifyContent: 'center',\r\n    borderRadius: 15,\r\n    paddingHorizontal: 40,\r\n    paddingVertical: 6,\r\n  },\r\n  web_confirmInput: {\r\n    backgroundColor: 'green'\r\n  },\r\n  web_buttonText: {\r\n    color: \"#fff\",\r\n    textAlign: 'center',\r\n    fontSize: 12\r\n  },\r\n});\r\n"],"sourceRoot":""}