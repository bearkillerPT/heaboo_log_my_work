{"version":3,"sources":["screens/mobileApp.tsx","screens/webApp.tsx","App.tsx","firebaseConfig.js"],"names":["App","navigation","useState","inputText","setInputText","users","useContext","AppStateContext","View","style","styles","appContainer","StatusBar","ScrollView","usersContainer","keyboardShouldPersistTaps","Object","keys","map","user","index","visible","setVisible","buttonState","setButtonState","useEffect","logs","length","handleCancel","userView","key","TouchableOpacity","buttonContainer","backgroundColor","admin","onPress","Text","web_usernameText","Container","Title","Description","Input","secureTextEntry","onChangeText","text","keyboardType","Button","label","firebase","auth","signInWithEmailAndPassword","toLowerCase","then","database","ref","Date","now","set","push","catch","res","console","log","StyleSheet","create","display","flexGrow","padding","usernameText","color","textAlign","fontSize","borderRadius","justifyContent","alignContent","timestampView","flex","flexDirection","timestampContainer","logStateContainer","WebApp","route","web_appContainer","web_usersContainer","insertingPasswd","setInsertingPasswd","web_userView","web_buttonContainerAndInput","web_passwdInputContainer","TextInput","web_passwdInput","web_confirmInputContainer","web_confirmInput","web_buttonText","numberOfLines","web_cancelInputContainer","web_cancelInput","web_buttonContainerContainer","web_buttonContainer","web_timestampView","web_timestampContainer","web_logStateContainer","borderColor","overflow","borderWidth","paddingHorizontal","paddingVertical","apps","app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Stack","createStackNavigator","React","createContext","AppWrapper","setUsers","usersCount","setUsersCount","on","b","val","Restart","Provider","value","NavigationContainer","Navigator","Platform","OS","Screen","name","component","options","title","headerStyle","headerTintColor","headerTitleStyle","alignSelf","Admin","headerBackTitle","headerTitleContainerStyle","left","AdminUserDays","AdminUserDay","AdminAddUser","username","params","lastDay","daysArray","timestamp","lastDayDate","parseInt","timestampDate","getDate","getMonth","getFullYear","day","getTime","toLocaleDateString","filter","dayArray","interval","Math","abs","hours","floor","minutes","seconds","timestampViewContainer","toDateString","toLocaleTimeString","timestampDiffView","borderBottomWidth","borderBottomColor","workHoursText","useLayoutEffect","setOptions","headerLeft","HeaderBackButton","signOut","goBack","done","setUsername","password","setPassword","KeyboardAvoidingView","behavior","registerContainer","paddingBottom","createUserWithEmailAndPassword","uid","setTimeout","maxHeight","marginTop"],"mappings":"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","file":"static/js/app.06bd12e8.chunk.js","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\r\nimport { StyleSheet, Text, ScrollView, StatusBar, View, TouchableOpacity } from 'react-native';\r\nimport firebase from 'firebase';\r\nimport {AppStateContext} from '../App';\r\nimport Dialog from 'react-native-dialog';\r\n\r\n\r\n\r\nexport default function App({ navigation }) {\r\n  const [inputText, setInputText] = useState(\"\");\r\n  const users = useContext(AppStateContext);\r\n  return (\r\n    <View style={styles.appContainer} >\r\n      <StatusBar />\r\n      <ScrollView style={styles.usersContainer} keyboardShouldPersistTaps={'handled'}>\r\n        { \r\n          Object.keys(users).map((user, index) => {\r\n            const [visible, setVisible] = useState(false);\r\n            const [buttonState, setButtonState] = useState(false);\r\n            useEffect(() => {\r\n              if(users[user].logs) {\r\n                users[user].logs[Object.keys(users[user].logs)[(Object.keys(users[user].logs).length - 1)]] == \"Entrou\" ? setButtonState(true) : setButtonState(false);\r\n              }\r\n            }, [users])\r\n            const showDialog = () => {\r\n              setVisible(true);\r\n            };\r\n\r\n            const handleCancel = () => {\r\n              setVisible(false);\r\n            };\r\n            return (\r\n              <View style={styles.userView} key={index}>\r\n                <TouchableOpacity style={[styles.buttonContainer, {\r\n                  backgroundColor: users[user].admin ? \"#7E7E7E\" : buttonState ?   \"#14CE95\" : \"#EB5C52\"\r\n                }]} onPress={showDialog}>\r\n                  <View>\r\n                    <Text style={styles.web_usernameText}>{user}</Text>\r\n                    <Dialog.Container visible={visible} >\r\n                      <Dialog.Title>Inserir password</Dialog.Title>\r\n                      <Dialog.Description>\r\n                        Insira a sua password para começar!\r\n                      </Dialog.Description>\r\n                      <Dialog.Input secureTextEntry onChangeText={(text) => { setInputText(text) }} keyboardType='number-pad'></Dialog.Input>\r\n                      <Dialog.Button label=\"OK\" onPress={() => {\r\n                        firebase.auth().signInWithEmailAndPassword(user.toLowerCase() + \"@log-my-work.pt\", inputText + \"99\")\r\n                          .then(()=>{\r\n                            if (buttonState) {\r\n                              setButtonState(false);\r\n                              firebase.database().ref('users/' + user + '/logs/' + Date.now()).set(\r\n                                'Saiu'\r\n                              );\r\n                            }\r\n                            else {\r\n                              if (users[user].admin) {\r\n                                navigation.push('Admin');\r\n                              }\r\n                              else {\r\n                                setButtonState(true);\r\n                                firebase.database().ref('users/' + user + '/logs/' + Date.now()).set(\r\n                                  'Entrou'\r\n                                );\r\n                              }\r\n  \r\n                            }\r\n                          setInputText(\"\");\r\n                          handleCancel();\r\n                          })\r\n                          .catch((res)=>{console.log(res)});\r\n                         \r\n                      }} />\r\n                      <Dialog.Button label=\"Cancel\" onPress={handleCancel} />\r\n                    </Dialog.Container>\r\n                  </View>\r\n                </TouchableOpacity>\r\n              </View>\r\n            );\r\n          })\r\n        }\r\n      </ScrollView>\r\n    </View>\r\n\r\n\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  appContainer: {\r\n    display: 'flex',\r\n    flexGrow: 1,\r\n    backgroundColor: '#000',\r\n  },\r\n  usersContainer: {\r\n    display: 'flex',\r\n    flexGrow: 1,\r\n    backgroundColor: '#313131',\r\n  },\r\n  userView: {\r\n    padding: 10,\r\n  },\r\n  usernameText: {\r\n    color: \"#fff\",\r\n    textAlign: 'center',\r\n  },\r\n  web_usernameText: {\r\n    color: \"#fff\",\r\n    textAlign: 'center',\r\n    fontSize: 30\r\n  },\r\n  buttonContainer: {\r\n    padding: 20,\r\n    borderRadius: 10,\r\n    justifyContent: 'center',\r\n    alignContent: 'center'\r\n  },\r\n  timestampView: {\r\n    padding: 10,\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between'\r\n  },\r\n  timestampContainer: {\r\n\r\n  },\r\n  logStateContainer: {\r\n  }\r\n});\r\n","import firebase from 'firebase';\r\nimport { AppStateContext } from '../App';\r\nimport React, { useState, useContext, useEffect } from 'react';\r\nimport { TextInput, StyleSheet, Text, ScrollView, StatusBar, View, TouchableOpacity } from 'react-native';\r\n\r\nexport default function WebApp({ navigation, route }) {\r\n  const users = useContext(AppStateContext);\r\n  return (\r\n    <View style={styles.web_appContainer}>\r\n      <StatusBar />\r\n      <ScrollView style={styles.web_usersContainer}>\r\n        {\r\n          Object.keys(users).map((user, index) => {\r\n            const [inputText, setInputText] = useState(\"\");\r\n            const [insertingPasswd, setInsertingPasswd] = useState(false);\r\n            const [buttonState, setButtonState] = useState(false);   \r\n            useEffect(() => {\r\n              if(users[user].logs) {\r\n                users[user].logs[Object.keys(users[user].logs)[(Object.keys(users[user].logs).length - 1)]] == \"Entrou\" ? setButtonState(true) : setButtonState(false);\r\n              }\r\n            }, [users])        \r\n            return (\r\n              <View style={styles.web_userView} key={index}>\r\n                {insertingPasswd &&\r\n                  <View style={styles.web_buttonContainerAndInput}>\r\n                    <View style={styles.web_passwdInputContainer}>\r\n                      <TextInput style={styles.web_passwdInput} secureTextEntry onChangeText={(text) => setInputText(text)}>\r\n                      </TextInput>\r\n\r\n                    </View>\r\n                    <View style={{ display: 'flex', flex: 1 }}>\r\n                      <TouchableOpacity style={styles.web_confirmInputContainer} onPress={() => {\r\n                        firebase.auth().signInWithEmailAndPassword(user.toLowerCase() + \"@log-my-work.pt\", inputText + \"99\")\r\n                          .then(() => {\r\n                            if (users[user].admin) {\r\n                              navigation.push(\"Admin\")\r\n\r\n                            }\r\n                            //else{\r\n                            //  firebase.database().ref(\"users/\" + user + \"/logs/\" + Date.now()).set(\r\n                            //    buttonState ? \"Saiu\" : \"Entrou\" \r\n                            //  );\r\n                            //  buttonState ? setButtonState(false) :  setButtonState(true);\r\n                            //}\r\n                            setInsertingPasswd(false);\r\n                            setInputText('');\r\n                          })\r\n                          .catch((res) => { console.log(res) });\r\n                      }} >\r\n                        <View style={styles.web_confirmInput} >\r\n                          <Text style={styles.web_buttonText} numberOfLines={1} >Confirmar</Text>\r\n                        </View>\r\n                      </TouchableOpacity>\r\n                      <TouchableOpacity style={styles.web_cancelInputContainer} onPress={() => setInsertingPasswd(false)}>\r\n                        <View style={styles.web_cancelInput} >\r\n                          <Text style={styles.web_buttonText} numberOfLines={1} >Cancelar</Text>\r\n                        </View>\r\n                      </TouchableOpacity>\r\n                    </View>\r\n                  </View>\r\n\r\n                }\r\n                {!insertingPasswd &&\r\n                  <View style={styles.web_buttonContainerContainer}>\r\n                    <TouchableOpacity style={[styles.web_buttonContainer, {\r\n                      backgroundColor: users[user].admin ? \"#7E7E7E\" : buttonState ?   \"#14CE95\" : \"#EB5C52\"\r\n                    }]} onPress={() => {\r\n                      insertingPasswd ? setInsertingPasswd(false) : setInsertingPasswd(true)\r\n                    }}>\r\n                      <View>\r\n                        <Text style={styles.web_usernameText}>{user}</Text>\r\n                      </View>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n                }\r\n              </View>\r\n            );\r\n          })\r\n        }\r\n      </ScrollView>\r\n    </View>\r\n\r\n\r\n  );\r\n}\r\nconst styles = StyleSheet.create({\r\n  web_appContainer: {\r\n    backgroundColor: '#000',\r\n    flexGrow: 1,\r\n    justifyContent: 'center',\r\n    alignContent: 'center',\r\n  },\r\n  web_usersContainer: {\r\n    backgroundColor: '#313131',\r\n    padding: 10,\r\n  },\r\n  web_userView: {\r\n    display: 'flex',\r\n    flex: 1,\r\n    justifyContent: 'space-between',\r\n    alignContent: 'space-between',\r\n  },\r\n  web_usernameText: {\r\n    color: \"#fff\",\r\n    textAlign: 'center',\r\n    fontSize: 30\r\n  },\r\n  web_buttonContainer: {\r\n    flex: 1,\r\n    padding: 20,\r\n    borderRadius: 10,\r\n    justifyContent: 'center',\r\n    alignContent: 'center'\r\n  },\r\n  web_buttonContainerContainer: {\r\n\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    padding: 11.5,\r\n  },\r\n  web_buttonContainerAndInput: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    padding: 20,\r\n    justifyContent: 'center',\r\n    alignContent: 'center'\r\n  },\r\n  web_timestampView: {\r\n    padding: 10,\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between'\r\n  },\r\n  web_timestampContainer: {\r\n\r\n  },\r\n  web_logStateContainer: {\r\n  },\r\n  web_passwdInput: {\r\n    flex: 1,\r\n    borderColor: 'white',\r\n    overflow: 'hidden',\r\n    borderRadius: 10,\r\n    borderWidth: 1,\r\n    backgroundColor: '#252525',\r\n    color: '#FFF',\r\n    fontSize: 20,\r\n  },\r\n  web_passwdInputContainer: {\r\n    justifyContent: 'space-between',\r\n    alignContent: 'space-between',\r\n    flexDirection: 'row',\r\n    flex: 1\r\n  },\r\n  web_cancelInputContainer: {\r\n    flex: 1,\r\n    paddingHorizontal: 20,\r\n    paddingVertical: 2\r\n  },\r\n  web_cancelInput: {\r\n    flex: 1,\r\n    backgroundColor: \"#EB5C52\", \r\n    alignContent: 'center',\r\n    justifyContent: 'center',\r\n    borderRadius: 15,\r\n\r\n\r\n  },\r\n  web_confirmInputContainer: {\r\n    flex: 1,\r\n    paddingHorizontal: 20,\r\n    paddingVertical: 2\r\n  },\r\n  web_confirmInput: {\r\n    flex: 1,\r\n    backgroundColor: \"#14CE95\", //\r\n    alignContent: 'center',\r\n    justifyContent: 'center',\r\n    borderRadius: 15,\r\n  },\r\n  web_buttonText: {\r\n    color: \"#fff\",\r\n    textAlign: 'center',\r\n    fontSize: 20\r\n  },\r\n});\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport { Platform, Alert, TextInput, StyleSheet, KeyboardAvoidingView, Text, ScrollView, StatusBar, View, TouchableOpacity } from 'react-native';\r\n//import firebase from 'firebase/app';\r\nimport App from './screens/mobileApp';\r\nimport WebApp from './screens/webApp';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createStackNavigator, HeaderBackButton } from '@react-navigation/stack';\r\nimport { createContext } from 'react';\r\nimport { firebaseConfig } from './firebaseConfig';\r\nimport firebase from 'firebase'\r\nimport {reloadAsync} from 'expo-updates'\r\nimport { Restart } from 'fiction-expo-restart';\r\n//export var firebase = require('firebase/app');\r\n//require('firebase/database');\r\n\r\n\r\nif (!firebase.apps.length) {\r\n  firebase.initializeApp(firebaseConfig);\r\n} else {\r\n  firebase.app(); // if already initialized, use that one\r\n}\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nexport const AppStateContext = React.createContext({});\r\nexport default function AppWrapper() {\r\n  const [users, setUsers] = useState(null);\r\n  const [usersCount, setUsersCount] = useState(0);\r\n  useEffect(() => {\r\n    firebase.database().ref(\"users\").on('value', (res, b) => {\r\n      if (usersCount == 0) setUsersCount(Object.keys(res.val()).length);\r\n      setUsers(res.val());\r\n    });\r\n\r\n  }, []);\r\n  if (!users) return (<View></View>);\r\n  console.log(Object.keys(users).length, usersCount)\r\n  if (Object.keys(users).length != usersCount)\r\n    Restart();\r\n  return (\r\n    <AppStateContext.Provider value={users}>\r\n      <NavigationContainer >\r\n        <Stack.Navigator>\r\n          {Platform.OS !== \"web\" &&\r\n            <Stack.Screen name=\"Home\" component={App} options={{\r\n              title: 'Registo produção Hoterway',\r\n              headerStyle: {\r\n                backgroundColor: '#464646',\r\n              },\r\n              headerTintColor: '#FFF'\r\n            }} />\r\n          }\r\n          {Platform.OS === \"web\" &&\r\n            <Stack.Screen name=\"Home\" component={WebApp} options={{\r\n              title: 'Registo produção Hoterway',\r\n              headerTitleStyle: { alignSelf: 'center' },\r\n              headerStyle: {\r\n                backgroundColor: '#464646',\r\n              },\r\n              headerTintColor: '#FFF',\r\n            }} />\r\n          }\r\n          <Stack.Screen name=\"Admin\" component={Admin} options={{\r\n            title: 'Admin',\r\n            headerTitleStyle: { alignSelf: 'center' },\r\n            headerBackTitle: 'Logout',\r\n            headerStyle: {\r\n              backgroundColor: '#464646',\r\n            },\r\n            headerTitleContainerStyle: {\r\n              left: 0, // THIS RIGHT HERE\r\n            },\r\n            headerTintColor: '#FFF',\r\n          }} />\r\n          <Stack.Screen name=\"AdminUserDays\" component={AdminUserDays} options={{\r\n            title: 'Dias de Trabalho',\r\n            headerTitleStyle: { alignSelf: 'center' },\r\n            headerStyle: {\r\n              backgroundColor: '#464646',\r\n            },\r\n            \r\n            headerTitleContainerStyle: {\r\n              left: 0, // THIS RIGHT HERE\r\n            },\r\n            headerTintColor: '#FFF'\r\n          }} />\r\n          <Stack.Screen name=\"AdminUserDay\" component={AdminUserDay} options={{\r\n            title: 'Log do Dia',\r\n            headerTitleStyle: { alignSelf: 'center' },\r\n            headerStyle: {\r\n              backgroundColor: '#464646',\r\n            },\r\n            \r\n            headerTitleContainerStyle: {\r\n              left: 0, // THIS RIGHT HERE\r\n            },\r\n            headerTintColor: '#FFF'\r\n          }} />\r\n          <Stack.Screen name=\"AdminAddUser\" component={AdminAddUser} options={{\r\n            title: 'Adicionar User',\r\n            headerTitleStyle: { alignSelf: 'center' },\r\n            headerStyle: {\r\n              backgroundColor: '#464646',\r\n            },\r\n            \r\n            headerTitleContainerStyle: {\r\n              left: 0, // THIS RIGHT HERE\r\n            },\r\n            headerTintColor: '#FFF'\r\n          }} />\r\n        </Stack.Navigator>\r\n      </NavigationContainer>\r\n    </AppStateContext.Provider>\r\n  );\r\n}\r\n\r\nexport function AdminUserDays({ navigation, route }) {\r\n  const users = useContext(AppStateContext);\r\n  if (!users) return (\r\n    <View style={styles.appContainer}>\r\n      <StatusBar />\r\n      <View style={styles.timestampView}>\r\n        <Text style={styles.usernameText}>Loading...</Text>\r\n      </View>\r\n    </View>\r\n  );\r\n  const username = route.params.username;\r\n  if (!users[username].logs) return (\r\n    <View style={styles.appContainer}>\r\n      <StatusBar />\r\n      <View style={styles.timestampView}>\r\n        <Text style={styles.usernameText}>Não existem logs para o user {username}!</Text>\r\n      </View>\r\n    </View>\r\n  );\r\n  const timestamps = Object.keys(users[username].logs)\r\n  let lastDay = \"0\";\r\n  const daysArray = [];\r\n  for (let timestamp of timestamps) {\r\n    const lastDayDate = new Date(parseInt(lastDay))\r\n    const timestampDate = new Date(parseInt(timestamp));\r\n\r\n    if (timestampDate.getDate() != lastDayDate.getDate() ||\r\n      timestampDate.getMonth() != lastDayDate.getMonth() ||\r\n      timestampDate.getFullYear() != lastDayDate.getFullYear()) {\r\n      lastDay = timestamp;\r\n      daysArray.push(timestampDate)\r\n    }\r\n  }\r\n  return (\r\n    <View style={styles.appContainer}>\r\n      <StatusBar />\r\n      <View style={styles.userView}>\r\n        <Text style={styles.usernameText}>{username}</Text>\r\n        <ScrollView style={styles.usersContainer}>{\r\n          daysArray.map((day, index) => {\r\n            return (\r\n              <View style={styles.web_buttonContainerContainer} key={index}>\r\n                <TouchableOpacity style={[styles.web_buttonContainer, {\r\n                  backgroundColor: \"#EB5C52\",\r\n                  flex: 1\r\n                }]} onPress={() => {\r\n                  navigation.push(\"AdminUserDay\", { username, day: day.getTime() })\r\n                }}>\r\n                  <View>\r\n                    <Text style={styles.web_usernameText}>{day.toLocaleDateString()}</Text>\r\n                  </View>\r\n                </TouchableOpacity>\r\n              </View>\r\n            );\r\n          })\r\n        }</ScrollView>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport function AdminUserDay({ route }) {\r\n  const users = useContext(AppStateContext);\r\n  if (!users) return (\r\n    <View style={styles.appContainer}>\r\n      <StatusBar />\r\n      <View style={styles.timestampView}>\r\n        <Text style={styles.usernameText}>Loading...</Text>\r\n      </View>\r\n    </View>\r\n  );\r\n  const username = route.params.username;\r\n  const day = new Date(parseInt(route.params.day));\r\n  return (\r\n    <View style={styles.appContainer}>\r\n      <StatusBar />\r\n      <View style={styles.userView}>\r\n        <Text style={styles.usernameText}>{username}</Text>\r\n        <ScrollView style={styles.usersContainer}>{\r\n          Object.keys(users[username].logs).filter((timestamp) => {\r\n            const timestampDate = new Date(parseInt(timestamp));\r\n            console.log(timestampDate.getDate() + \" == \" + day.getDate())\r\n            return ((timestampDate.getDate() == day.getDate() &&\r\n              timestampDate.getMonth() == day.getMonth() &&\r\n              timestampDate.getFullYear() == day.getFullYear())\r\n            )\r\n          }).map((timestamp, index, dayArray) => {\r\n            const interval = Math.abs(parseInt(timestamp) - parseInt(dayArray[index - 1]));\r\n            const hours = Math.floor(interval / 3.6e6);\r\n            const minutes = Math.floor(interval / 6e4) % 60;\r\n            const seconds = Math.floor(interval / 1000) % 60;\r\n            const timestampDate = new Date(parseInt(timestamp));\r\n            if (timestampDate.getDate() === day.getDate() &&\r\n              timestampDate.getMonth() === day.getMonth() &&\r\n              timestampDate.getFullYear() === day.getFullYear());\r\n            return (\r\n              <View key={index} style={styles.timestampViewContainer}>\r\n                <View style={styles.timestampView} >\r\n                  <View style={styles.logStateContainer}>\r\n                    <Text style={styles.usernameText}>{users[username].logs[timestamp]}</Text>\r\n                  </View>\r\n                  <View style={styles.timestampContainer}>\r\n                    <Text style={styles.usernameText}>\r\n                      {new Date(parseInt(timestamp)).toDateString()}\r\n                    </Text>\r\n                    <Text style={styles.usernameText}>\r\n                      {new Date(parseInt(timestamp)).toLocaleTimeString()}\r\n                    </Text>\r\n                  </View>\r\n                </View>\r\n                {users[username].logs[timestamp] == \"Saiu\" &&\r\n                  <View style={[styles.timestampDiffView, {\r\n                    borderBottomWidth: 10,\r\n                    borderBottomColor: '#EB5C52',\r\n\r\n                  }]}>\r\n                    <Text style={styles.workHoursText} >\r\n                      Tempo de trabalho (hh : mm : ss)\r\n                    </Text>\r\n                    <Text style={styles.workHoursText} >\r\n                      {hours < 10 ? '0' + hours : hours} : {minutes < 10 ? '0' + minutes : minutes} : {seconds < 10 ? '0' + seconds : seconds}\r\n                    </Text>\r\n                  </View>\r\n                }\r\n\r\n              </View>\r\n\r\n            );\r\n          }\r\n          )\r\n        }</ScrollView>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport function Admin({ navigation }) {\r\n  const users = useContext(AppStateContext);\r\n  React.useLayoutEffect(() => {\r\n    navigation.setOptions({\r\n      headerLeft: ()=>( <HeaderBackButton onPress={ ()=>{\r\n        firebase.auth().signOut();\r\n        navigation.goBack();\r\n      }}/>)\r\n    });\r\n  }, [navigation]);\r\n  if (users == null)\r\n    return (\r\n      <View style={styles.appContainer}>\r\n        <StatusBar />\r\n        <Text style={styles.usernameText}>Loading....</Text>\r\n      </View>\r\n    );\r\n  else\r\n    return (\r\n      <View style={styles.appContainer}>\r\n        <StatusBar />\r\n        <View style={styles.userView}>\r\n          <ScrollView style={styles.usersContainer}>{\r\n            Object.keys(users).filter((username) => {\r\n              return !users[username].admin;\r\n            }).map((username, index) => {\r\n              return (\r\n                  <View style={styles.web_buttonContainerContainer} key={index}>\r\n                    <TouchableOpacity style={[styles.web_buttonContainer, {\r\n                      backgroundColor: \"#EB5C52\",\r\n                      flex: 1\r\n                    }]} onPress={() => {\r\n                      navigation.push('AdminUserDays', { username })\r\n                    }}>\r\n                      <View>\r\n                        <Text style={styles.web_usernameText}>{username}</Text>\r\n                      </View>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n              );\r\n            })\r\n          }\r\n            {Platform.OS !== \"web\" &&\r\n                <View style={styles.web_buttonContainerContainer}>\r\n                  <TouchableOpacity style={[styles.web_buttonContainer, {\r\n                    backgroundColor: \"#14CE95\",\r\n                    flex: 1\r\n                  }]} onPress={() => {\r\n                    navigation.push('AdminAddUser')\r\n                  }}>\r\n                    <View>\r\n                      <Text style={styles.web_usernameText}>Adicionar Utilizador</Text>\r\n                    </View>\r\n                  </TouchableOpacity>\r\n                </View>\r\n            }\r\n          </ScrollView>\r\n        </View>\r\n      </View>\r\n    );\r\n}\r\n\r\nfunction AdminAddUser() {\r\n  const [done, setDone] = useState(false)\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  return (\r\n    <KeyboardAvoidingView style={{ flex: 1 }} behavior=\"padding\">\r\n      <View style={styles.registerContainer}>\r\n        <View style={styles.userView}>\r\n          <Text style={styles.usernameText}>Introduza as credenciais:</Text>\r\n        </View>\r\n        <View style={{\r\n          display: 'flex'\r\n        }}>\r\n          <View style={[{\r\n            paddingHorizontal: 20,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n          }]}>\r\n            <Text style={styles.usernameText}>Nome</Text>\r\n            <TextInput style={styles.web_passwdInput} onChangeText={(text) => setUsername(text)}>\r\n            </TextInput>\r\n          </View>\r\n          <View style={[{\r\n            paddingHorizontal: 20,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            paddingBottom: 10\r\n          }]}>\r\n            <Text style={styles.usernameText}>Password</Text>\r\n            <TextInput style={styles.web_passwdInput} secureTextEntry onChangeText={(text) => setPassword(text)}>\r\n            </TextInput>\r\n          </View>\r\n        </View>\r\n        <View style={styles.userView}>\r\n          <TouchableOpacity style={[styles.web_buttonContainer, {\r\n            backgroundColor: done ? \"#14CE95\" : \"#EB5C52\",\r\n          }]} onPress={() => {\r\n            if (username !== \"\" && password.length > 3) {\r\n              firebase.auth().createUserWithEmailAndPassword(username + \"@log-my-work.pt\", password + \"99\");\r\n              firebase.database().ref('users/' + username).set({\r\n                admin: false,\r\n                uid: null\r\n              })\r\n              setTimeout(Restart(), 50);\r\n            }\r\n            \r\n\r\n          }}>\r\n            <View>\r\n              <Text style={styles.usernameText}>Adicionar!</Text>\r\n            </View>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n    </KeyboardAvoidingView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  appContainer: {\r\n    display: 'flex',\r\n    flexGrow: 1,\r\n    backgroundColor: '#313131',\r\n  },\r\n  registerContainer: {\r\n    flexGrow: 1,\r\n    display: 'flex',\r\n    alignContent: 'center',\r\n    backgroundColor: '#313131',\r\n  },\r\n  usersContainer: {\r\n    display: 'flex',\r\n    flexGrow: 1,\r\n    backgroundColor: '#313131',\r\n  },\r\n  userView: {\r\n    padding: 10,\r\n  },\r\n  usernameText: {\r\n    color: \"#fff\",\r\n    textAlign: 'center',\r\n  },\r\n  buttonContainer: {\r\n    padding: 20,\r\n    borderRadius: 10,\r\n    justifyContent: 'center',\r\n    alignContent: 'center'\r\n  },\r\n  timestampView: {\r\n    padding: 10,\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between'\r\n  },\r\n  timestampDiffView: {\r\n    padding: 10,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center'\r\n  },\r\n  timestampContainer: {\r\n\r\n  },\r\n  logStateContainer: {\r\n  },\r\n\r\n\r\n  web_appContainer: {\r\n    backgroundColor: '#000',\r\n    flexGrow: 1,\r\n    justifyContent: 'center',\r\n    alignContent: 'center',\r\n    maxHeight: 800\r\n  },\r\n  web_usersContainer: {\r\n    backgroundColor: '#000',\r\n  },\r\n  web_userView: {\r\n    display: 'flex',\r\n    flex: 1,\r\n    padding: 10,\r\n    justifyContent: 'space-between',\r\n    alignContent: 'space-between',\r\n  },\r\n  web_usernameText: {\r\n    color: \"#fff\",\r\n    textAlign: 'center',\r\n    fontSize: 30\r\n  },\r\n  web_buttonContainer: {\r\n    padding: 15,\r\n    borderRadius: 10,\r\n    justifyContent: 'center',\r\n    alignContent: 'center'\r\n  },\r\n  web_buttonContainerContainer: {\r\n\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    padding: 11.5,\r\n  },\r\n  web_timestampView: {\r\n    padding: 10,\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between'\r\n  },\r\n  web_timestampContainer: {\r\n\r\n  },\r\n  web_logStateContainer: {\r\n  },\r\n  web_passwdInput: {\r\n    borderColor: 'white',\r\n    borderWidth: 1,\r\n    overflow: 'hidden',\r\n    borderRadius: 10,\r\n    color: '#FFF',\r\n    fontSize: 20,\r\n    marginTop: 5\r\n  },\r\n  web_passwdInputContainer: {\r\n    justifyContent: 'space-between',\r\n    alignContent: 'space-between',\r\n    flexDirection: 'column',\r\n    display: 'flex',\r\n  },\r\n  web_cancelInputContainer: {\r\n    flex: 1,\r\n    backgroundColor: 'red',\r\n    alignContent: 'center',\r\n    justifyContent: 'center',\r\n    borderRadius: 15,\r\n    paddingHorizontal: 40,\r\n    paddingVertical: 6,\r\n  },\r\n  web_cancelInput: {\r\n    backgroundColor: 'red'\r\n\r\n  },\r\n  web_confirmInputContainer: {\r\n    flex: 1,\r\n    backgroundColor: 'green',\r\n    alignContent: 'center',\r\n    justifyContent: 'center',\r\n    borderRadius: 15,\r\n    paddingHorizontal: 40,\r\n    paddingVertical: 6,\r\n  },\r\n  web_confirmInput: {\r\n    backgroundColor: 'green'\r\n  },\r\n  web_buttonText: {\r\n    color: \"#fff\",\r\n    textAlign: 'center',\r\n    fontSize: 12\r\n  },\r\n  workHoursText: {\r\n    color: \"#fff\",\r\n    textAlign: 'center',\r\n  }\r\n});\r\n","\r\nexport const firebaseConfig = {\r\n  apiKey: \"AIzaSyA9MV-PgCXfWhnGt-FRHlVIzlvUuRhVmRc\",\r\n  authDomain: \"log-my-work-8db34.firebaseapp.com\",\r\n  databaseURL: \"https://log-my-work-8db34-default-rtdb.firebaseio.com\",\r\n  projectId: \"log-my-work-8db34\",\r\n  storageBucket: \"log-my-work-8db34.appspot.com\",\r\n  messagingSenderId: \"721021340350\",\r\n  appId: \"1:721021340350:web:75b15661f04266d863ecef\",\r\n  measurementId: \"G-86K99VSDRW\"\r\n};\r\n"],"sourceRoot":""}