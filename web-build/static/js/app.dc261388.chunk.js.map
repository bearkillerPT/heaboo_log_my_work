{"version":3,"sources":["screens/mobileApp.tsx","screens/webApp.tsx","App.tsx"],"names":["App","navigation","useState","inputText","setInputText","users","useContext","AppStateContext","View","style","styles","appContainer","StatusBar","ScrollView","usersContainer","Object","keys","map","user","index","visible","setVisible","buttonsState","setButtonsState","handleCancel","userView","key","TouchableOpacity","buttonContainer","backgroundColor","admin","onPress","Text","usernameText","Container","Title","Description","Input","secureTextEntry","onChangeText","text","keyboardType","Button","label","firebase","auth","signInWithEmailAndPassword","toLowerCase","then","database","ref","Date","now","set","push","catch","res","console","log","StyleSheet","create","display","flexGrow","padding","color","textAlign","borderRadius","justifyContent","alignContent","timestampView","flex","flexDirection","timestampContainer","logStateContainer","WebApp","route","web_appContainer","web_usersContainer","insertingPasswd","setInsertingPasswd","web_userView","web_passwdInputContainer","TextInput","web_passwdInput","web_cancelInputContainer","web_cancelInput","web_buttonText","web_confirmInputContainer","web_confirmInput","web_buttonContainer","web_usernameText","maxHeight","fontSize","web_timestampView","web_timestampContainer","web_logStateContainer","borderColor","borderWidth","marginTop","paddingHorizontal","paddingVertical","apps","length","app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Stack","createStackNavigator","React","createContext","AppWrapper","setUsers","useEffect","once","val","Provider","value","NavigationContainer","Navigator","Platform","OS","Screen","name","component","options","title","headerStyle","headerTintColor","headerTitleStyle","alignSelf","Admin","AdminUser","username","params","logs","timestamp","parseInt","toDateString","toLocaleTimeString"],"mappings":"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","file":"static/js/app.dc261388.chunk.js","sourcesContent":["import React, { useState, useContext } from 'react';\r\nimport { StyleSheet, Text, ScrollView, StatusBar, View, TouchableOpacity } from 'react-native';\r\nimport firebase from 'firebase';\r\nimport {AppStateContext} from '../App';\r\nimport Dialog from 'react-native-dialog';\r\n\r\n\r\n\r\nexport default function App({ navigation }) {\r\n  const [inputText, setInputText] = useState(\"\");\r\n  const users = useContext(AppStateContext);\r\n  return (\r\n    <View style={styles.appContainer}>\r\n      <StatusBar />\r\n      <ScrollView style={styles.usersContainer}>\r\n        { \r\n          Object.keys(users).map((user, index) => {\r\n            const [visible, setVisible] = useState(false);\r\n            const [buttonsState, setButtonsState] = useState(false);\r\n            const [userState, setUserState] = useState(user);\r\n            const showDialog = () => {\r\n              setVisible(true);\r\n            };\r\n\r\n            const handleCancel = () => {\r\n              setVisible(false);\r\n            };\r\n            return (\r\n              <View style={styles.userView} key={index}>\r\n                <TouchableOpacity style={[styles.buttonContainer, {\r\n                  backgroundColor: users[user].admin ? \"#4D4E4F\" : buttonsState ? \"green\" : \"red\"\r\n                }]} onPress={showDialog}>\r\n                  <View>\r\n                    <Text style={styles.usernameText}>{user}</Text>\r\n                    <Dialog.Container visible={visible} >\r\n                      <Dialog.Title>Inserir password</Dialog.Title>\r\n                      <Dialog.Description>\r\n                        Insira a sua password para começar!\r\n                      </Dialog.Description>\r\n                      <Dialog.Input secureTextEntry onChangeText={(text) => { setInputText(text) }} keyboardType='number-pad'></Dialog.Input>\r\n                      <Dialog.Button label=\"OK\" onPress={() => {\r\n                        firebase.auth().signInWithEmailAndPassword(user.toLowerCase() + \"@log-my-work.pt\", inputText + \"99\")\r\n                          .then(()=>{\r\n                            if (buttonsState) {\r\n                              setButtonsState(false);\r\n                              firebase.database().ref('users/' + user + '/logs/' + Date.now()).set(\r\n                                'Saiu'\r\n                              );\r\n                            }\r\n                            else {\r\n                              if (users[user].admin) {\r\n                                navigation.push('Admin');\r\n                              }\r\n                              else {\r\n                                setButtonsState(true);\r\n                                firebase.database().ref('users/' + user + '/logs/' + Date.now()).set(\r\n                                  'Entrou'\r\n                                );\r\n                              }\r\n  \r\n                            }\r\n                          setInputText(\"\");\r\n                          handleCancel();\r\n                          })\r\n                          .catch((res)=>{console.log(res)});\r\n                         \r\n                      }} />\r\n                      <Dialog.Button label=\"Cancel\" onPress={handleCancel} />\r\n                    </Dialog.Container>\r\n                  </View>\r\n                </TouchableOpacity>\r\n              </View>\r\n            );\r\n          })\r\n        }\r\n      </ScrollView>\r\n    </View>\r\n\r\n\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  appContainer: {\r\n    display: 'flex',\r\n    flexGrow: 1,\r\n    backgroundColor: '#000',\r\n  },\r\n  usersContainer: {\r\n    display: 'flex',\r\n    flexGrow: 1,\r\n    backgroundColor: '#000',\r\n  },\r\n  userView: {\r\n    padding: 10,\r\n  },\r\n  usernameText: {\r\n    color: \"#fff\",\r\n    textAlign: 'center',\r\n  },\r\n  buttonContainer: {\r\n    padding: 20,\r\n    borderRadius: 10,\r\n    justifyContent: 'center',\r\n    alignContent: 'center'\r\n  },\r\n  timestampView: {\r\n    padding: 10,\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between'\r\n  },\r\n  timestampContainer: {\r\n\r\n  },\r\n  logStateContainer: {\r\n  }\r\n});\r\n","import firebase from 'firebase';\r\nimport {AppStateContext} from '../App';\r\nimport React, { useState, useContext } from 'react';\r\nimport { TextInput, StyleSheet, Text, ScrollView, StatusBar, View, TouchableOpacity } from 'react-native';\r\n\r\nexport default function WebApp({navigation, route}) {\r\n  const users = useContext(AppStateContext);\r\n  return (\r\n    <View style={styles.web_appContainer}>\r\n      <StatusBar />\r\n      <ScrollView style={styles.web_usersContainer}>\r\n        {\r\n         Object.keys(users).map((user, index) => {\r\n            const [buttonsState, setButtonsState] = useState(false);\r\n            const [inputText, setInputText] = useState(\"\");\r\n            const [insertingPasswd, setInsertingPasswd] = useState(false)\r\n            return (\r\n              <View style={styles.web_userView} key={index}>\r\n                {insertingPasswd &&\r\n                  <View style={styles.web_passwdInputContainer}>\r\n                    <TextInput style={styles.web_passwdInput} secureTextEntry onChangeText={(text) => setInputText(text)}>\r\n                    </TextInput>\r\n                    <View style={{ display: 'flex', flex: 1 }}>\r\n                      <TouchableOpacity style={styles.web_cancelInputContainer} onPress={() => setInsertingPasswd(false)}>\r\n                        <View style={styles.web_cancelInput} >\r\n                          <Text style={styles.web_buttonText}>Cancelar</Text>\r\n                        </View>\r\n                      </TouchableOpacity>\r\n                      <TouchableOpacity style={styles.web_confirmInputContainer} onPress={() => {\r\n                        \r\n                          firebase.auth().signInWithEmailAndPassword(user.toLowerCase() + \"@log-my-work.pt\", inputText + \"99\")\r\n                            .then( ()=> {\r\n                              if(users[user].admin)\r\n                                navigation.push(\"Admin\")\r\n                              else{\r\n                                firebase.database().ref(\"users/\" + user + \"/logs/\" + Date.now()).set(\r\n                                  buttonsState ? \"Saiu\" : \"Entrou\" \r\n                                );\r\n                                buttonsState ? setButtonsState(false) :  setButtonsState(true);\r\n  \r\n                                setInsertingPasswd(false); \r\n                              }\r\n                            })\r\n                            .catch((res)=>{console.log(res)});\r\n                    }} >\r\n                        <View style={styles.web_confirmInput} >\r\n                          <Text style={styles.web_buttonText}>Confirmar</Text>\r\n                        </View>\r\n                      </TouchableOpacity>\r\n                    </View>\r\n                  </View>\r\n                }\r\n                {!insertingPasswd &&\r\n                  <TouchableOpacity style={[styles.web_buttonContainer, {\r\n                    backgroundColor: users[user].admin ? \"#4D4E4F\" : buttonsState ? \"green\" : \"red\"\r\n                  }]} onPress={() => {\r\n                      insertingPasswd ? setInsertingPasswd(false) : setInsertingPasswd(true)\r\n                  }}>\r\n                    <View>\r\n                      <Text style={styles.web_usernameText}>{user}</Text>\r\n                    </View>\r\n                  </TouchableOpacity>\r\n                }\r\n              </View>\r\n            );\r\n          })\r\n        }\r\n      </ScrollView>\r\n    </View>\r\n\r\n\r\n  );\r\n}\r\nconst styles = StyleSheet.create({\r\n  web_appContainer: {\r\n    backgroundColor: '#000',\r\n    flexGrow: 1,\r\n    justifyContent: 'center',\r\n    alignContent: 'center',\r\n    maxHeight: 800\r\n  },\r\n  web_usersContainer: {\r\n    backgroundColor: '#000',\r\n  },\r\n  web_userView: {\r\n    display: 'flex',\r\n    flex: 1,\r\n    padding: 10,\r\n    justifyContent: 'space-between',\r\n    alignContent: 'space-between',\r\n  },\r\n  web_usernameText: {\r\n    color: \"#fff\",\r\n    textAlign: 'center',\r\n    fontSize: 30\r\n  },\r\n  web_buttonContainer: {\r\n    padding: 20,\r\n    borderRadius: 10,\r\n    justifyContent: 'center',\r\n    alignContent: 'center'\r\n  },\r\n  web_timestampView: {\r\n    padding: 10,\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between'\r\n  },\r\n  web_timestampContainer: {\r\n\r\n  },\r\n  web_logStateContainer: {\r\n  },\r\n  web_passwdInput: {\r\n    flex: 1,\r\n    borderColor: 'white',\r\n    borderWidth: 1,\r\n    color: '#FFF',\r\n    fontSize: 20,\r\n    marginTop: 5\r\n  },\r\n  web_passwdInputContainer: {\r\n    justifyContent: 'space-between',\r\n    alignContent: 'space-between',\r\n    flexDirection: 'row',\r\n    display: 'flex'\r\n  },\r\n  web_cancelInputContainer: {\r\n    flex: 1,\r\n    backgroundColor: 'red',\r\n    alignContent: 'center',\r\n    justifyContent: 'center',\r\n    borderRadius: 15,\r\n    paddingHorizontal: 40,\r\n    paddingVertical: 6,\r\n  },\r\n  web_cancelInput: {\r\n    backgroundColor: 'red'\r\n\r\n  },\r\n  web_confirmInputContainer: {\r\n    flex: 1,\r\n    backgroundColor: 'green',\r\n    alignContent: 'center',\r\n    justifyContent: 'center',\r\n    borderRadius: 15,\r\n    paddingHorizontal: 40,\r\n    paddingVertical: 6,\r\n  },\r\n  web_confirmInput: {\r\n    backgroundColor: 'green'\r\n  },\r\n  web_buttonText: {\r\n    color: \"#fff\",\r\n    textAlign: 'center',\r\n    fontSize: 12\r\n  },\r\n});\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport { Platform, Alert, TextInput, StyleSheet, Text, ScrollView, StatusBar, View, TouchableOpacity } from 'react-native';\r\n//import firebase from 'firebase/app';\r\nimport App from './screens/mobileApp';\r\nimport WebApp from './screens/webApp';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport { createContext } from 'react';\r\nimport firebase from 'firebase'\r\n//export var firebase = require('firebase/app');\r\n//require('firebase/database');\r\n\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyA9MV-PgCXfWhnGt-FRHlVIzlvUuRhVmRc\",\r\n  authDomain: \"log-my-work-8db34.firebaseapp.com\",\r\n  databaseURL: \"https://log-my-work-8db34-default-rtdb.firebaseio.com\",\r\n  projectId: \"log-my-work-8db34\",\r\n  storageBucket: \"log-my-work-8db34.appspot.com\",\r\n  messagingSenderId: \"721021340350\",\r\n  appId: \"1:721021340350:web:75b15661f04266d863ecef\",\r\n  measurementId: \"G-86K99VSDRW\"\r\n};\r\n\r\nif (!firebase.apps.length) {\r\n  firebase.initializeApp(firebaseConfig);\r\n} else {\r\n  firebase.app(); // if already initialized, use that one\r\n}\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nexport const AppStateContext = React.createContext({});\r\nexport default function AppWrapper() {\r\n  const [users, setUsers] = useState();\r\n  useEffect(() => {\r\n     firebase.database().ref(\"users\").once('value').then((res) => { setUsers(res.val()) })\r\n  }\r\n    , []);\r\n  if(!users) return(<View></View>);\r\n  return (\r\n    <AppStateContext.Provider value={users}>\r\n      <NavigationContainer >\r\n        <Stack.Navigator>\r\n          {Platform.OS !== \"web\" &&\r\n            <Stack.Screen name=\"Home\" component={App} options={{\r\n              title: 'Registo produção Hoterway',\r\n              headerStyle: {\r\n                backgroundColor: '#000',\r\n              },\r\n              headerTintColor: '#FFF'\r\n            }} />\r\n          }\r\n          {Platform.OS === \"web\" &&\r\n            <Stack.Screen name=\"Home\" component={WebApp} options={{\r\n              title: 'Registo produção Hoterway',\r\n              headerTitleStyle: { alignSelf: 'center' },\r\n              headerStyle: {\r\n                backgroundColor: '#000',\r\n              },\r\n              headerTintColor: '#FFF',\r\n            }} />\r\n          }\r\n          <Stack.Screen name=\"Admin\" component={Admin} options={{\r\n            title: 'Admin',\r\n            headerTitleStyle: { alignSelf: 'center' },\r\n            headerStyle: {\r\n              backgroundColor: '#000',\r\n            },\r\n            headerTintColor: '#FFF'\r\n          }} />\r\n          <Stack.Screen name=\"AdminUser\" component={AdminUser} options={{\r\n            title: 'Admin',\r\n            headerTitleStyle: { alignSelf: 'center' },\r\n            headerStyle: {\r\n              backgroundColor: '#000',\r\n            },\r\n            headerTintColor: '#FFF'\r\n          }} />\r\n        </Stack.Navigator>\r\n      </NavigationContainer>\r\n    </AppStateContext.Provider>\r\n  );\r\n}\r\n\r\nexport function AdminUser({ route }) {\r\n  \r\n  const [users, setUsers] = useState();\r\n  useEffect(() => {\r\n     firebase.database().ref(\"users\").once('value').then((res) => { setUsers(res.val()) })\r\n  }\r\n    , []);\r\n  if(!users) return(\r\n    <View style={styles.appContainer}>\r\n      <StatusBar />\r\n      <View style={styles.timestampView}>\r\n      <Text style={styles.usernameText}>Loading...</Text>\r\n      </View>\r\n    </View>\r\n  );\r\n  const username = route.params.username;\r\n  const user = users[username];\r\n  if(!user.logs) return(\r\n    <View style={styles.appContainer}>\r\n      <StatusBar />\r\n      <View style={styles.timestampView}>\r\n      <Text style={styles.usernameText}>Não existem logs para o user {username}!</Text>\r\n      </View>\r\n    </View>\r\n  );\r\n  return (\r\n    <View style={styles.appContainer}>\r\n      <StatusBar />\r\n      <View style={styles.userView}>\r\n        <Text style={styles.usernameText}>{username}</Text>\r\n        <ScrollView style={styles.usersContainer}>{\r\n          Object.keys(user.logs).map((timestamp, index) => {\r\n            return (\r\n              <View style={styles.timestampView} key={index}>\r\n                <View style={styles.logStateContainer}>\r\n                  <Text style={styles.usernameText}>{user.logs[timestamp]}</Text>\r\n                </View>\r\n                <View style={styles.timestampContainer}>\r\n                  <Text style={styles.usernameText}>\r\n                    {new Date(parseInt(timestamp)).toDateString()}\r\n                  </Text>\r\n                  <Text style={styles.usernameText}>\r\n                    {new Date(parseInt(timestamp)).toLocaleTimeString()}\r\n                  </Text>\r\n                </View>\r\n              </View>\r\n            );\r\n          }\r\n          )\r\n        }</ScrollView>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport function Admin({ navigation }) {\r\n  const users = useContext(AppStateContext);\r\n  if (users == null)\r\n    return (\r\n      <View style={styles.appContainer}>\r\n        <StatusBar />\r\n        <Text style={styles.usernameText}>Loading....</Text>\r\n      </View>\r\n    );\r\n  else\r\n    return (\r\n      <View style={styles.appContainer}>\r\n        <StatusBar />\r\n        <ScrollView style={styles.usersContainer}>{\r\n          Object.keys(users).map((username, index) => {\r\n            return (\r\n              <View style={styles.timestampView} key={index}>\r\n                <TouchableOpacity style={[styles.buttonContainer]} onPress={() => {\r\n                  navigation.push('AdminUser', { username })\r\n                }}>\r\n                  <Text style={styles.usernameText}>{username}</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            );\r\n          })\r\n        }</ScrollView>\r\n      </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  appContainer: {\r\n    display: 'flex',\r\n    flexGrow: 1,\r\n    backgroundColor: '#000',\r\n  },\r\n  usersContainer: {\r\n    display: 'flex',\r\n    flexGrow: 1,\r\n    backgroundColor: '#000',\r\n  },\r\n  userView: {\r\n    padding: 10,\r\n  },\r\n  usernameText: {\r\n    color: \"#fff\",\r\n    textAlign: 'center',\r\n  },\r\n  buttonContainer: {\r\n    padding: 20,\r\n    borderRadius: 10,\r\n    justifyContent: 'center',\r\n    alignContent: 'center'\r\n  },\r\n  timestampView: {\r\n    padding: 10,\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between'\r\n  },\r\n  timestampContainer: {\r\n\r\n  },\r\n  logStateContainer: {\r\n  },\r\n\r\n\r\n  web_appContainer: {\r\n    backgroundColor: '#000',\r\n    flexGrow: 1,\r\n    justifyContent: 'center',\r\n    alignContent: 'center',\r\n    maxHeight: 800\r\n  },\r\n  web_usersContainer: {\r\n    backgroundColor: '#000',\r\n  },\r\n  web_userView: {\r\n    display: 'flex',\r\n    flex: 1,\r\n    padding: 10,\r\n    justifyContent: 'space-between',\r\n    alignContent: 'space-between',\r\n  },\r\n  web_usernameText: {\r\n    color: \"#fff\",\r\n    textAlign: 'center',\r\n    fontSize: 30\r\n  },\r\n  web_buttonContainer: {\r\n    padding: 20,\r\n    borderRadius: 10,\r\n    justifyContent: 'center',\r\n    alignContent: 'center'\r\n  },\r\n  web_timestampView: {\r\n    padding: 10,\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between'\r\n  },\r\n  web_timestampContainer: {\r\n\r\n  },\r\n  web_logStateContainer: {\r\n  },\r\n  web_passwdInput: {\r\n    flex: 1,\r\n    borderColor: 'white',\r\n    borderWidth: 1,\r\n    color: '#FFF',\r\n    fontSize: 20,\r\n    marginTop: 5\r\n  },\r\n  web_passwdInputContainer: {\r\n    justifyContent: 'space-between',\r\n    alignContent: 'space-between',\r\n    flexDirection: 'row',\r\n    display: 'flex'\r\n  },\r\n  web_cancelInputContainer: {\r\n    flex: 1,\r\n    backgroundColor: 'red',\r\n    alignContent: 'center',\r\n    justifyContent: 'center',\r\n    borderRadius: 15,\r\n    paddingHorizontal: 40,\r\n    paddingVertical: 6,\r\n  },\r\n  web_cancelInput: {\r\n    backgroundColor: 'red'\r\n\r\n  },\r\n  web_confirmInputContainer: {\r\n    flex: 1,\r\n    backgroundColor: 'green',\r\n    alignContent: 'center',\r\n    justifyContent: 'center',\r\n    borderRadius: 15,\r\n    paddingHorizontal: 40,\r\n    paddingVertical: 6,\r\n  },\r\n  web_confirmInput: {\r\n    backgroundColor: 'green'\r\n  },\r\n  web_buttonText: {\r\n    color: \"#fff\",\r\n    textAlign: 'center',\r\n    fontSize: 12\r\n  },\r\n});\r\n"],"sourceRoot":""}