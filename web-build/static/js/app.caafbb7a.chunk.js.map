{"version":3,"sources":["screens/mobileApp.tsx","screens/webApp.tsx","App.tsx"],"names":["App","navigation","useState","inputText","setInputText","users","useContext","AppStateContext","View","style","styles","appContainer","StatusBar","ScrollView","usersContainer","Object","keys","map","user","index","visible","setVisible","buttonState","setButtonState","useEffect","logs","length","handleCancel","userView","key","TouchableOpacity","buttonContainer","backgroundColor","admin","onPress","Text","usernameText","Container","Title","Description","Input","secureTextEntry","onChangeText","text","keyboardType","Button","label","firebase","auth","signInWithEmailAndPassword","toLowerCase","then","database","ref","Date","now","set","push","catch","res","console","log","StyleSheet","create","display","flexGrow","padding","color","textAlign","borderRadius","justifyContent","alignContent","timestampView","flex","flexDirection","timestampContainer","logStateContainer","WebApp","route","web_appContainer","web_usersContainer","insertingPasswd","setInsertingPasswd","web_userView","web_buttonContainerAndInput","web_passwdInputContainer","TextInput","web_passwdInput","web_cancelInputContainer","web_cancelInput","web_buttonText","numberOfLines","web_confirmInputContainer","web_confirmInput","web_buttonContainerContainer","web_buttonContainer","web_usernameText","fontSize","web_timestampView","web_timestampContainer","web_logStateContainer","borderColor","overflow","borderWidth","paddingHorizontal","paddingVertical","apps","app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Stack","createStackNavigator","React","createContext","AppWrapper","setUsers","on","val","Provider","value","NavigationContainer","Navigator","Platform","OS","Screen","name","component","options","title","headerStyle","headerTintColor","headerTitleStyle","alignSelf","Admin","AdminUser","username","params","timestamp","interval","Math","abs","parseInt","hours","floor","minutes","seconds","toDateString","toLocaleTimeString","timestampDiffView","maxHeight","marginTop"],"mappings":"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","file":"static/js/app.caafbb7a.chunk.js","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\r\nimport { StyleSheet, Text, ScrollView, StatusBar, View, TouchableOpacity } from 'react-native';\r\nimport firebase from 'firebase';\r\nimport {AppStateContext} from '../App';\r\nimport Dialog from 'react-native-dialog';\r\n\r\n\r\n\r\nexport default function App({ navigation }) {\r\n  const [inputText, setInputText] = useState(\"\");\r\n  const users = useContext(AppStateContext);\r\n  return (\r\n    <View style={styles.appContainer}>\r\n      <StatusBar />\r\n      <ScrollView style={styles.usersContainer}>\r\n        { \r\n          Object.keys(users).map((user, index) => {\r\n            const [visible, setVisible] = useState(false);\r\n            const [buttonState, setButtonState] = useState(false);\r\n            useEffect(() => {\r\n              if(users[user].logs) {\r\n                users[user].logs[Object.keys(users[user].logs)[(Object.keys(users[user].logs).length - 1)]] == \"Entrou\" ? setButtonState(true) : setButtonState(false);\r\n              }\r\n            }, [users])\r\n            const showDialog = () => {\r\n              setVisible(true);\r\n            };\r\n\r\n            const handleCancel = () => {\r\n              setVisible(false);\r\n            };\r\n            return (\r\n              <View style={styles.userView} key={index}>\r\n                <TouchableOpacity style={[styles.buttonContainer, {\r\n                  backgroundColor: users[user].admin ? \"#4D4E4F\" : (buttonState ? \"green\" : \"red\")\r\n                }]} onPress={showDialog}>\r\n                  <View>\r\n                    <Text style={styles.usernameText}>{user}</Text>\r\n                    <Dialog.Container visible={visible} >\r\n                      <Dialog.Title>Inserir password</Dialog.Title>\r\n                      <Dialog.Description>\r\n                        Insira a sua password para começar!\r\n                      </Dialog.Description>\r\n                      <Dialog.Input secureTextEntry onChangeText={(text) => { setInputText(text) }} keyboardType='number-pad'></Dialog.Input>\r\n                      <Dialog.Button label=\"OK\" onPress={() => {\r\n                        firebase.auth().signInWithEmailAndPassword(user.toLowerCase() + \"@log-my-work.pt\", inputText + \"99\")\r\n                          .then(()=>{\r\n                            if (buttonState) {\r\n                              setButtonState(false);\r\n                              firebase.database().ref('users/' + user + '/logs/' + Date.now()).set(\r\n                                'Saiu'\r\n                              );\r\n                            }\r\n                            else {\r\n                              if (users[user].admin) {\r\n                                navigation.push('Admin');\r\n                              }\r\n                              else {\r\n                                setButtonState(true);\r\n                                firebase.database().ref('users/' + user + '/logs/' + Date.now()).set(\r\n                                  'Entrou'\r\n                                );\r\n                              }\r\n  \r\n                            }\r\n                          setInputText(\"\");\r\n                          handleCancel();\r\n                          })\r\n                          .catch((res)=>{console.log(res)});\r\n                         \r\n                      }} />\r\n                      <Dialog.Button label=\"Cancel\" onPress={handleCancel} />\r\n                    </Dialog.Container>\r\n                  </View>\r\n                </TouchableOpacity>\r\n              </View>\r\n            );\r\n          })\r\n        }\r\n      </ScrollView>\r\n    </View>\r\n\r\n\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  appContainer: {\r\n    display: 'flex',\r\n    flexGrow: 1,\r\n    backgroundColor: '#000',\r\n  },\r\n  usersContainer: {\r\n    display: 'flex',\r\n    flexGrow: 1,\r\n    backgroundColor: '#000',\r\n  },\r\n  userView: {\r\n    padding: 10,\r\n  },\r\n  usernameText: {\r\n    color: \"#fff\",\r\n    textAlign: 'center',\r\n  },\r\n  buttonContainer: {\r\n    padding: 20,\r\n    borderRadius: 10,\r\n    justifyContent: 'center',\r\n    alignContent: 'center'\r\n  },\r\n  timestampView: {\r\n    padding: 10,\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between'\r\n  },\r\n  timestampContainer: {\r\n\r\n  },\r\n  logStateContainer: {\r\n  }\r\n});\r\n","import firebase from 'firebase';\r\nimport { AppStateContext } from '../App';\r\nimport React, { useState, useContext, useEffect } from 'react';\r\nimport { TextInput, StyleSheet, Text, ScrollView, StatusBar, View, TouchableOpacity } from 'react-native';\r\n\r\nexport default function WebApp({ navigation, route }) {\r\n  const users = useContext(AppStateContext);\r\n  return (\r\n    <View style={styles.web_appContainer}>\r\n      <StatusBar />\r\n      <ScrollView style={styles.web_usersContainer}>\r\n        {\r\n          Object.keys(users).map((user, index) => {\r\n            const [inputText, setInputText] = useState(\"\");\r\n            const [insertingPasswd, setInsertingPasswd] = useState(false);\r\n            const [buttonState, setButtonState] = useState(false);   \r\n            useEffect(() => {\r\n              if(users[user].logs) {\r\n                users[user].logs[Object.keys(users[user].logs)[(Object.keys(users[user].logs).length - 1)]] == \"Entrou\" ? setButtonState(true) : setButtonState(false);\r\n              }\r\n            }, [users])        \r\n            return (\r\n              <View style={styles.web_userView} key={index}>\r\n                {insertingPasswd &&\r\n                  <View style={styles.web_buttonContainerAndInput}>\r\n                    <View style={styles.web_passwdInputContainer}>\r\n                      <TextInput style={styles.web_passwdInput} secureTextEntry onChangeText={(text) => setInputText(text)}>\r\n                      </TextInput>\r\n\r\n                    </View>\r\n                    <View style={{ display: 'flex', flex: 1 }}>\r\n                      <TouchableOpacity style={styles.web_cancelInputContainer} onPress={() => setInsertingPasswd(false)}>\r\n                        <View style={styles.web_cancelInput} >\r\n                          <Text style={styles.web_buttonText} numberOfLines={1} >Cancelar</Text>\r\n                        </View>\r\n                      </TouchableOpacity>\r\n                      <TouchableOpacity style={styles.web_confirmInputContainer} onPress={() => {\r\n                        firebase.auth().signInWithEmailAndPassword(user.toLowerCase() + \"@log-my-work.pt\", inputText + \"99\")\r\n                          .then(() => {\r\n                            if (users[user].admin) {\r\n                              navigation.push(\"Admin\")\r\n\r\n                            }\r\n                            //else{\r\n                            //  firebase.database().ref(\"users/\" + user + \"/logs/\" + Date.now()).set(\r\n                            //    buttonState ? \"Saiu\" : \"Entrou\" \r\n                            //  );\r\n                            //  buttonState ? setButtonState(false) :  setButtonState(true);\r\n                            //}\r\n                            setInsertingPasswd(false);\r\n                            \r\n                          })\r\n                          .catch((res) => { console.log(res) });\r\n                      }} >\r\n                        <View style={styles.web_confirmInput} >\r\n                          <Text style={styles.web_buttonText} numberOfLines={1} >Confirmar</Text>\r\n                        </View>\r\n                      </TouchableOpacity>\r\n                    </View>\r\n                  </View>\r\n\r\n                }\r\n                {!insertingPasswd &&\r\n                  <View style={styles.web_buttonContainerContainer}>\r\n                    <TouchableOpacity style={[styles.web_buttonContainer, {\r\n                      backgroundColor: users[user].admin ? \"#4D4E4F\" : buttonState ? \"green\" : \"red\"\r\n                    }]} onPress={() => {\r\n                      insertingPasswd ? setInsertingPasswd(false) : setInsertingPasswd(true)\r\n                    }}>\r\n                      <View>\r\n                        <Text style={styles.web_usernameText}>{user}</Text>\r\n                      </View>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n                }\r\n              </View>\r\n            );\r\n          })\r\n        }\r\n      </ScrollView>\r\n    </View>\r\n\r\n\r\n  );\r\n}\r\nconst styles = StyleSheet.create({\r\n  web_appContainer: {\r\n    backgroundColor: '#000',\r\n    flexGrow: 1,\r\n    justifyContent: 'center',\r\n    alignContent: 'center',\r\n  },\r\n  web_usersContainer: {\r\n    backgroundColor: '#000',\r\n    padding: 10,\r\n  },\r\n  web_userView: {\r\n    display: 'flex',\r\n    flex: 1,\r\n    justifyContent: 'space-between',\r\n    alignContent: 'space-between',\r\n  },\r\n  web_usernameText: {\r\n    color: \"#fff\",\r\n    textAlign: 'center',\r\n    fontSize: 30\r\n  },\r\n  web_buttonContainer: {\r\n    flex: 1,\r\n    padding: 20,\r\n    borderRadius: 10,\r\n    justifyContent: 'center',\r\n    alignContent: 'center'\r\n  },\r\n  web_buttonContainerContainer: {\r\n\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    padding: 11.5,\r\n  },\r\n  web_buttonContainerAndInput: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    padding: 20,\r\n    justifyContent: 'center',\r\n    alignContent: 'center'\r\n  },\r\n  web_timestampView: {\r\n    padding: 10,\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between'\r\n  },\r\n  web_timestampContainer: {\r\n\r\n  },\r\n  web_logStateContainer: {\r\n  },\r\n  web_passwdInput: {\r\n    flex: 1,\r\n    borderColor: 'white',\r\n    overflow: 'hidden',\r\n    borderRadius: 10,\r\n    borderWidth: 1,\r\n    color: '#FFF',\r\n    fontSize: 20,\r\n  },\r\n  web_passwdInputContainer: {\r\n    justifyContent: 'space-between',\r\n    alignContent: 'space-between',\r\n    flexDirection: 'row',\r\n    flex: 1\r\n  },\r\n  web_cancelInputContainer: {\r\n    flex: 1,\r\n    paddingHorizontal: 20,\r\n    paddingVertical: 2\r\n  },\r\n  web_cancelInput: {\r\n    flex: 1,\r\n    backgroundColor: 'red',\r\n    alignContent: 'center',\r\n    justifyContent: 'center',\r\n    borderRadius: 15,\r\n\r\n\r\n  },\r\n  web_confirmInputContainer: {\r\n    flex: 1,\r\n    paddingHorizontal: 20,\r\n    paddingVertical: 2\r\n  },\r\n  web_confirmInput: {\r\n    flex: 1,\r\n    backgroundColor: 'green',\r\n    alignContent: 'center',\r\n    justifyContent: 'center',\r\n    borderRadius: 15,\r\n  },\r\n  web_buttonText: {\r\n    color: \"#fff\",\r\n    textAlign: 'center',\r\n    fontSize: 20\r\n  },\r\n});\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport { Platform, Alert, TextInput, StyleSheet, Text, ScrollView, StatusBar, View, TouchableOpacity } from 'react-native';\r\n//import firebase from 'firebase/app';\r\nimport App from './screens/mobileApp';\r\nimport WebApp from './screens/webApp';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport { createContext } from 'react';\r\nimport firebase from 'firebase'\r\n//export var firebase = require('firebase/app');\r\n//require('firebase/database');\r\n\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyA9MV-PgCXfWhnGt-FRHlVIzlvUuRhVmRc\",\r\n  authDomain: \"log-my-work-8db34.firebaseapp.com\",\r\n  databaseURL: \"https://log-my-work-8db34-default-rtdb.firebaseio.com\",\r\n  projectId: \"log-my-work-8db34\",\r\n  storageBucket: \"log-my-work-8db34.appspot.com\",\r\n  messagingSenderId: \"721021340350\",\r\n  appId: \"1:721021340350:web:75b15661f04266d863ecef\",\r\n  measurementId: \"G-86K99VSDRW\"\r\n};\r\n\r\nif (!firebase.apps.length) {\r\n  firebase.initializeApp(firebaseConfig);\r\n} else {\r\n  firebase.app(); // if already initialized, use that one\r\n}\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nexport const AppStateContext = React.createContext({});\r\nexport default function AppWrapper() {\r\n  const [users, setUsers] = useState();\r\n  useEffect(() => {\r\n    firebase.database().ref(\"users\").on('value', (res) => { setUsers(res.val()); console.log(res.val()) });\r\n\r\n\r\n  }\r\n    , []);\r\n  if (!users) return (<View></View>);\r\n  return (\r\n    <AppStateContext.Provider value={users}>\r\n      <NavigationContainer >\r\n        <Stack.Navigator>\r\n          {Platform.OS !== \"web\" &&\r\n            <Stack.Screen name=\"Home\" component={App} options={{\r\n              title: 'Registo produção Hoterway',\r\n              headerStyle: {\r\n                backgroundColor: '#000',\r\n              },\r\n              headerTintColor: '#FFF'\r\n            }} />\r\n          }\r\n          {Platform.OS === \"web\" &&\r\n            <Stack.Screen name=\"Home\" component={WebApp} options={{\r\n              title: 'Registo produção Hoterway',\r\n              headerTitleStyle: { alignSelf: 'center' },\r\n              headerStyle: {\r\n                backgroundColor: '#000',\r\n              },\r\n              headerTintColor: '#FFF',\r\n            }} />\r\n          }\r\n          <Stack.Screen name=\"Admin\" component={Admin} options={{\r\n            title: 'Admin',\r\n            headerTitleStyle: { alignSelf: 'center' },\r\n            headerStyle: {\r\n              backgroundColor: '#000',\r\n            },\r\n            headerTintColor: '#FFF'\r\n          }} />\r\n          <Stack.Screen name=\"AdminUser\" component={AdminUser} options={{\r\n            title: 'Admin',\r\n            headerTitleStyle: { alignSelf: 'center' },\r\n            headerStyle: {\r\n              backgroundColor: '#000',\r\n            },\r\n            headerTintColor: '#FFF'\r\n          }} />\r\n        </Stack.Navigator>\r\n      </NavigationContainer>\r\n    </AppStateContext.Provider>\r\n  );\r\n}\r\n\r\nexport function AdminUser({ route }) {\r\n  const users = useContext(AppStateContext);\r\n  if (!users) return (\r\n    <View style={styles.appContainer}>\r\n      <StatusBar />\r\n      <View style={styles.timestampView}>\r\n        <Text style={styles.usernameText}>Loading...</Text>\r\n      </View>\r\n    </View>\r\n  );\r\n  const username = route.params.username;\r\n  if (!users[username].logs) return (\r\n    <View style={styles.appContainer}>\r\n      <StatusBar />\r\n      <View style={styles.timestampView}>\r\n        <Text style={styles.usernameText}>Não existem logs para o user {username}!</Text>\r\n      </View>\r\n    </View>\r\n  );\r\n  return (\r\n    <View style={styles.appContainer}>\r\n      <StatusBar />\r\n      <View style={styles.userView}>\r\n        <Text style={styles.usernameText}>{username}</Text>\r\n        <ScrollView style={styles.usersContainer}>{\r\n          Object.keys(users[username].logs).map((timestamp, index) => {\r\n            const interval = Math.abs(parseInt(timestamp) -  parseInt(Object.keys(users[username].logs)[index - 1]));\r\n            const hours = Math.floor(interval / 3.6e6);\r\n            const minutes = Math.floor(interval / 6e4) % 60;\r\n            const seconds = Math.floor(interval / 1000) % 60 ;\r\n            return (\r\n              <View key={index}>\r\n                <View style={styles.timestampView} >\r\n                  <View style={styles.logStateContainer}>\r\n                    <Text style={styles.usernameText}>{users[username].logs[timestamp]}</Text>\r\n                  </View>\r\n                  <View style={styles.timestampContainer}>\r\n                    <Text style={styles.usernameText}>\r\n                      {new Date(parseInt(timestamp)).toDateString()}\r\n                    </Text>\r\n                    <Text style={styles.usernameText}>\r\n                      {new Date(parseInt(timestamp)).toLocaleTimeString()}\r\n                    </Text>\r\n                  </View>\r\n                </View>\r\n                {users[username].logs[timestamp] == \"Saiu\" && \r\n                  <View style={styles.timestampDiffView}>\r\n                    <Text style={styles.usernameText}>\r\n                      Tempo de trabalho (hh : mm : ss) - {hours < 10 ? '0' + hours : hours} : {minutes < 10 ? '0' + minutes : minutes} : {seconds < 10 ? '0' + seconds : seconds} \r\n                    </Text>\r\n                  </View>\r\n                }\r\n\r\n              </View>\r\n\r\n            );\r\n          }\r\n          )\r\n        }</ScrollView>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport function Admin({ navigation }) {\r\n  const users = useContext(AppStateContext);\r\n  if (users == null)\r\n    return (\r\n      <View style={styles.appContainer}>\r\n        <StatusBar />\r\n        <Text style={styles.usernameText}>Loading....</Text>\r\n      </View>\r\n    );\r\n  else\r\n    return (\r\n      <View style={styles.appContainer}>\r\n        <StatusBar />\r\n        <ScrollView style={styles.usersContainer}>{\r\n          Object.keys(users).map((username, index) => {\r\n            return (\r\n              <View style={styles.timestampView} key={index}>\r\n                <TouchableOpacity style={[styles.buttonContainer]} onPress={() => {\r\n                  navigation.push('AdminUser', { username })\r\n                }}>\r\n                  <Text style={styles.usernameText}>{username}</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            );\r\n          })\r\n        }</ScrollView>\r\n      </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  appContainer: {\r\n    display: 'flex',\r\n    flexGrow: 1,\r\n    backgroundColor: '#000',\r\n  },\r\n  usersContainer: {\r\n    display: 'flex',\r\n    flexGrow: 1,\r\n    backgroundColor: '#000',\r\n  },\r\n  userView: {\r\n    padding: 10,\r\n  },\r\n  usernameText: {\r\n    color: \"#fff\",\r\n    textAlign: 'center',\r\n  },\r\n  buttonContainer: {\r\n    padding: 20,\r\n    borderRadius: 10,\r\n    justifyContent: 'center',\r\n    alignContent: 'center'\r\n  },\r\n  timestampView: {\r\n    padding: 10,\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between'\r\n  },\r\n  timestampDiffView: {\r\n    padding: 10,\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n    justifyContent: 'center'\r\n  },\r\n  timestampContainer: {\r\n\r\n  },\r\n  logStateContainer: {\r\n  },\r\n\r\n\r\n  web_appContainer: {\r\n    backgroundColor: '#000',\r\n    flexGrow: 1,\r\n    justifyContent: 'center',\r\n    alignContent: 'center',\r\n    maxHeight: 800\r\n  },\r\n  web_usersContainer: {\r\n    backgroundColor: '#000',\r\n  },\r\n  web_userView: {\r\n    display: 'flex',\r\n    flex: 1,\r\n    padding: 10,\r\n    justifyContent: 'space-between',\r\n    alignContent: 'space-between',\r\n  },\r\n  web_usernameText: {\r\n    color: \"#fff\",\r\n    textAlign: 'center',\r\n    fontSize: 30\r\n  },\r\n  web_buttonContainer: {\r\n    padding: 20,\r\n    borderRadius: 10,\r\n    justifyContent: 'center',\r\n    alignContent: 'center'\r\n  },\r\n  web_timestampView: {\r\n    padding: 10,\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between'\r\n  },\r\n  web_timestampContainer: {\r\n\r\n  },\r\n  web_logStateContainer: {\r\n  },\r\n  web_passwdInput: {\r\n    flex: 1,\r\n    borderColor: 'white',\r\n    borderWidth: 1,\r\n    color: '#FFF',\r\n    fontSize: 20,\r\n    marginTop: 5\r\n  },\r\n  web_passwdInputContainer: {\r\n    justifyContent: 'space-between',\r\n    alignContent: 'space-between',\r\n    flexDirection: 'row',\r\n    display: 'flex'\r\n  },\r\n  web_cancelInputContainer: {\r\n    flex: 1,\r\n    backgroundColor: 'red',\r\n    alignContent: 'center',\r\n    justifyContent: 'center',\r\n    borderRadius: 15,\r\n    paddingHorizontal: 40,\r\n    paddingVertical: 6,\r\n  },\r\n  web_cancelInput: {\r\n    backgroundColor: 'red'\r\n\r\n  },\r\n  web_confirmInputContainer: {\r\n    flex: 1,\r\n    backgroundColor: 'green',\r\n    alignContent: 'center',\r\n    justifyContent: 'center',\r\n    borderRadius: 15,\r\n    paddingHorizontal: 40,\r\n    paddingVertical: 6,\r\n  },\r\n  web_confirmInput: {\r\n    backgroundColor: 'green'\r\n  },\r\n  web_buttonText: {\r\n    color: \"#fff\",\r\n    textAlign: 'center',\r\n    fontSize: 12\r\n  },\r\n});\r\n"],"sourceRoot":""}